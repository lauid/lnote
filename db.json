{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1501864276000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1501862705000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1501862705000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1501862705000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1501862705000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1501862705000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1501862705000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1501862705000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1501862705000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1501862705000},{"_id":"themes/next/_config.yml","hash":"3fe6c0f3b5f44d9596a70d79c95e80b0a99218f2","modified":1512717702000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1501862705000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1501862705000},{"_id":"themes/next/README.en.md","hash":"32d6cdfec1447f54aae1d7f1365ce6733dfcec8f","modified":1501862705000},{"_id":"themes/next/bower.json","hash":"7d7938f9da896fe710aa0e9120140e528bf058df","modified":1501862705000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1501862705000},{"_id":"themes/next/package.json","hash":"193dad6f59a588908fac082cc46fe067dac1b84d","modified":1501862705000},{"_id":"source/_posts/Good-Content.md","hash":"61889ab6bcb1bf7dc9f8e19ddf07846120dcb03e","modified":1501866321000},{"_id":"source/_posts/Hot-Content.md","hash":"832b7433d87f0de36f140df0b2f33c524ec8a271","modified":1502765821000},{"_id":"source/_posts/elasticsearch5-0升级问题.md","hash":"0025cd667f6a2425aee575f695540e3a43464938","modified":1502765821000},{"_id":"source/_posts/explain详解-md.md","hash":"2af61a4cebc74d19658a3bf0d4331ddf1edd8898","modified":1502765821000},{"_id":"source/_posts/hexo-blog.md","hash":"1f1caf971d52897ed4b0b3c5d82ece22dbcf9796","modified":1502765821000},{"_id":"source/_posts/hello-world.md","hash":"95ae477ec70f5f8cd722c47705e34f8e1a917962","modified":1502765821000},{"_id":"source/_posts/hexo-install.md","hash":"b2312e3406ea5ceb2a02969a5b55e7ac3eceaec4","modified":1501866770000},{"_id":"source/_posts/kubernetes安装.md","hash":"ef8fbf270ecd1f441beb380512b958ce0967a88d","modified":1501864674000},{"_id":"source/_posts/php-extension.md","hash":"8994c41f8fa4c03e187079c6dab3e11ae01b8413","modified":1502765821000},{"_id":"source/_posts/number-bit.md","hash":"5aadfa1466fcbcbacf26d72c5dfe7cb18e3fa2e9","modified":1502765821000},{"_id":"source/_posts/php的yield和生成器.md","hash":"a4568d68db27f3c38bb435e572738c8942119c49","modified":1502765821000},{"_id":"source/_posts/note.md","hash":"9ecb518ad11d7fd787926e47d626e7bc988c3bbd","modified":1502765821000},{"_id":"source/_posts/php迭代器.md","hash":"f683721c1df73fd637fcca1bf0ece0ba24945c20","modified":1502765821000},{"_id":"source/_posts/su指定用户执行命令.md","hash":"832764eca21137c74b00338bbdee1d2519653167","modified":1504278185000},{"_id":"source/_posts/redis和memcached.md","hash":"e79d1c585f84260e08ee44ab9d0fa4747432dd5c","modified":1502765821000},{"_id":"source/_posts/一致性hash算法.md","hash":"1dc6bfe30d1b5b75614e08a31152009f25b3e377","modified":1502765821000},{"_id":"source/_posts/面向对象设计的SOLID原则.md","hash":"1908ae56388489ae38eddd3c1c82e40d69996a54","modified":1502765821000},{"_id":"source/tags/index.md","hash":"a20b086ee6725a4f713f7ed18cafb67ee5dd1582","modified":1501868117000},{"_id":"source/_posts/策略模式.md","hash":"22bf5cb81cc694e94ead388b40cd556ce783187f","modified":1502765821000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1501862705000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1501862705000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1501862682000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1501862705000},{"_id":"themes/next/.git/index","hash":"43a53d09ae0e19ec3afd2a493132ed6c44ebf72b","modified":1501866859000},{"_id":"themes/next/.git/packed-refs","hash":"5f309e82950655c7c0850641ea7b096d2ebd23d7","modified":1501862705000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b56c01cdfc6ee7ffea8a8a9fa149263f368caef6","modified":1501862705000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"37bd0ec1d655c601946fc5f5ac2fe8ed1e529b77","modified":1501862705000},{"_id":"themes/next/layout/_layout.swig","hash":"06b1eab2e00273e0b94bd32dc682bd92c1e0a747","modified":1501862705000},{"_id":"themes/next/layout/archive.swig","hash":"383f64deab105724fd5512371963bd9e9aafbffd","modified":1501862705000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1501862705000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1501862705000},{"_id":"themes/next/layout/page.swig","hash":"37c874cd720acf0eda8d26e063278f2b6ae8d3a6","modified":1501862705000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1501862705000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1501862705000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1501862705000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1501862705000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1501862705000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1501862705000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1501862705000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1501862705000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1501862705000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1501862705000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1501862705000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1501862705000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1501862705000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1501862705000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1501862705000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1501862705000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1501862705000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1501862705000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1501862705000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1501862705000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1501862705000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1501862682000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1501862682000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1501862682000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1501862682000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1501862682000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1501862682000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1501862682000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1501862682000},{"_id":"themes/next/.git/logs/HEAD","hash":"ec734e1cf7f1a7f2d43364a62527fecdd4ff7118","modified":1501862705000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1501862682000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1501862682000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"53d4f83b2b7fb4387dfc9fe81519abd56fbce4ae","modified":1501862705000},{"_id":"themes/next/layout/_macro/post.swig","hash":"911363776867d9523a3e322cdf591d49cd166403","modified":1501862705000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1501862705000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5d5f70deb6074cb4dd0438463e14ccf89213c282","modified":1501862705000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"ce7094ee05878161e7568a6dfae5b56ff3fbd6e1","modified":1501862705000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"faa7886ccf986890cd776f4e9d70cb89fe9fda5f","modified":1501862705000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1501862705000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1501862705000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1501862705000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1501862705000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1501862705000},{"_id":"themes/next/layout/_partials/head.swig","hash":"1f14d3f494b2dbbcee802fd6f6d1abd5b7e2304c","modified":1501862705000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1501862705000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1501862705000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1501862705000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1501862705000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1501862705000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1501862705000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1501862705000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1501862705000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1501862705000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1501862705000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501862705000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1501862705000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1501862705000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1501862705000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1501862705000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1501862705000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1501862705000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1501862705000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1501862705000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1501862705000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1501862705000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1501862705000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1501862705000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1501862705000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1501862705000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1501862705000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1501862705000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1501862705000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1501862705000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501862705000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1501862705000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1501862705000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1501862705000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1501862705000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1501862705000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1501862705000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1501862705000},{"_id":"themes/next/.git/refs/heads/master","hash":"75173e2dd18a6221ff84742ff53d01ac5c6e04b0","modified":1501862705000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1501862705000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1501862705000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1501862705000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1501862705000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1501862705000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1501862705000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1501862705000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1501862705000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1501862705000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1501862705000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501862705000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1501862705000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1501862705000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1501862705000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1501862705000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1501862705000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"ee63aa2e49507b884a2d56778479cf01c723d751","modified":1501862705000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1501862705000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1501862705000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1501862705000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1501862705000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1501862705000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1501862705000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1501862705000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"49b5210fa62d6cbc6a98f57d89d5067a06ab3561","modified":1501862705000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1501862705000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"cfee25d790e4f9b7d57f0dc7e2ea9c1649f08f11","modified":1501862705000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d477196c5699c8261b08e993a77ef67054d86166","modified":1501862705000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1501862705000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"eaedfaf06dae94ba77a8f4893e2e434bf8859bac","modified":1501862705000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1501862705000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1501862705000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1501862705000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1501862705000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1501862705000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1501862705000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1501862705000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1501862705000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1501862705000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1501862705000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1501862705000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1501862705000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1501862705000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1501862705000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1501862705000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1501862705000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1501862705000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1501862705000},{"_id":"themes/next/source/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1501862705000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1501862705000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1501862705000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1501862705000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1501862705000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1501862705000},{"_id":"themes/next/source/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1501862705000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1501862705000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1501862705000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1501862705000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1501862705000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1501862705000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1501862705000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1501862705000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1501862705000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1501862705000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1501862705000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1501862705000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1501862705000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"ec734e1cf7f1a7f2d43364a62527fecdd4ff7118","modified":1501862705000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1501862705000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1501862705000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d026c8489f66ab6c12ad04bd37f1d5b6f2f3f0d1","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1501862705000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1501862705000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"2915df7152ea095a6290ef69157fd67669e0e793","modified":1501862705000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"86b6fd7f1b1be3ae98f8af6b23a6b1299c670ce9","modified":1501862705000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1501862705000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1501862705000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1501862705000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"bc8c388553bbcf95897459a466ba35bffd5ec5f0","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1501862705000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1501862705000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1501862705000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1501862705000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1501862705000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1501862705000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1501862705000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"ec734e1cf7f1a7f2d43364a62527fecdd4ff7118","modified":1501862705000},{"_id":"themes/next/.git/objects/pack/pack-d4a4c67f3637bdbc3143099b2114d43686b6a60c.idx","hash":"7f733ce2fadab79edab5a8cdf693fbfa93ca11ca","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"45df0cf4c97b47e05573bcd41028ee50f3fdf432","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"65a64d5662637b66e2f039a5f58217afe7a6e800","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"57d2c8a060f5e4e1a0aef9aae11a0016cf7ac5ba","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ee554b1031ef0070a5916477939021800e3c9d27","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"51eca243220cf57133a4becae9b78514bcfdc723","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1501862705000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"aeff0e6e23725e8baea27c890ccbbf466024f767","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1501862705000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1501862705000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1501862705000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1501862705000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1501862705000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1501862705000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1501862705000},{"_id":"themes/next/.git/objects/pack/pack-d4a4c67f3637bdbc3143099b2114d43686b6a60c.pack","hash":"8c64a08076a998d8336e59314500949d701ceb16","modified":1501862705000}],"Category":[],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","date":"2017-08-04T16:31:16.000Z","updated":"2017-08-04T16:31:16.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjaxk47p40000w8wqewwafasd","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>\n"},{"title":"Tagcloud","type":"tags","date":"2017-08-04T17:31:24.000Z","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: Tagcloud\ntype: \"tags\"\ndate: 2017-08-05 01:31:24\ncomments: false\n---\n","updated":"2017-08-04T17:35:17.000Z","path":"tags/index.html","layout":"page","_id":"cjaxk47qs0002w8wq63xvqkm4","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Good Content","date":"2017-08-04T16:56:44.000Z","_content":"[免费的编程中文书籍索引](https://linux.cn/article-3661-1.html)\n\n[深入浅出 Redis client/server交互流程](http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ)\n\n[ 在PHP中使用协程实现多任务调度 ](http://www.laruence.com/2015/05/28/3038.html)\n\n[ Yac (Yet Another Cache) – 无锁共享内存Cache ](http://www.laruence.com/2013/03/18/2846.html)\n\n[ 一个小玩意PHP-Valgrind的介绍 ](http://www.laruence.com/2013/08/14/2899.html)\n\n[ 日请求过亿的Web系统PHP7升级实践 ](http://geek.csdn.net/news/detail/77849)\n\n[ PHP扩展开发与内核应用 ](http://www.cunmou.com/phpbook/index.md)\n\n[ 深入理解PHP内核 ](http://www.php-internals.com/)\n\n[ PHP扩展开发：快速入门 ](http://blog.csdn.net/micahriven/article/details/11678607)\n\n[swoole](http://wiki.swoole.com/wiki/page/p-perf.html)\n\n[构建C1000K的服务器(1)– 基础](http://www.ideawu.net/blog/archives/740.html)\n","source":"_posts/Good-Content.md","raw":"---\ntitle: Good Content\ndate: 2017-08-05 00:56:44\ntags: note\n---\n[免费的编程中文书籍索引](https://linux.cn/article-3661-1.html)\n\n[深入浅出 Redis client/server交互流程](http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ)\n\n[ 在PHP中使用协程实现多任务调度 ](http://www.laruence.com/2015/05/28/3038.html)\n\n[ Yac (Yet Another Cache) – 无锁共享内存Cache ](http://www.laruence.com/2013/03/18/2846.html)\n\n[ 一个小玩意PHP-Valgrind的介绍 ](http://www.laruence.com/2013/08/14/2899.html)\n\n[ 日请求过亿的Web系统PHP7升级实践 ](http://geek.csdn.net/news/detail/77849)\n\n[ PHP扩展开发与内核应用 ](http://www.cunmou.com/phpbook/index.md)\n\n[ 深入理解PHP内核 ](http://www.php-internals.com/)\n\n[ PHP扩展开发：快速入门 ](http://blog.csdn.net/micahriven/article/details/11678607)\n\n[swoole](http://wiki.swoole.com/wiki/page/p-perf.html)\n\n[构建C1000K的服务器(1)– 基础](http://www.ideawu.net/blog/archives/740.html)\n","slug":"Good-Content","published":1,"updated":"2017-08-04T17:05:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47qo0001w8wql7n9jmuj","content":"<p><a href=\"https://linux.cn/article-3661-1.html\" target=\"_blank\" rel=\"external\">免费的编程中文书籍索引</a></p>\n<p><a href=\"http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ\" target=\"_blank\" rel=\"external\">深入浅出 Redis client/server交互流程</a></p>\n<p><a href=\"http://www.laruence.com/2015/05/28/3038.html\" target=\"_blank\" rel=\"external\"> 在PHP中使用协程实现多任务调度 </a></p>\n<p><a href=\"http://www.laruence.com/2013/03/18/2846.html\" target=\"_blank\" rel=\"external\"> Yac (Yet Another Cache) – 无锁共享内存Cache </a></p>\n<p><a href=\"http://www.laruence.com/2013/08/14/2899.html\" target=\"_blank\" rel=\"external\"> 一个小玩意PHP-Valgrind的介绍 </a></p>\n<p><a href=\"http://geek.csdn.net/news/detail/77849\" target=\"_blank\" rel=\"external\"> 日请求过亿的Web系统PHP7升级实践 </a></p>\n<p><a href=\"http://www.cunmou.com/phpbook/index.md\" target=\"_blank\" rel=\"external\"> PHP扩展开发与内核应用 </a></p>\n<p><a href=\"http://www.php-internals.com/\" target=\"_blank\" rel=\"external\"> 深入理解PHP内核 </a></p>\n<p><a href=\"http://blog.csdn.net/micahriven/article/details/11678607\" target=\"_blank\" rel=\"external\"> PHP扩展开发：快速入门 </a></p>\n<p><a href=\"http://wiki.swoole.com/wiki/page/p-perf.html\" target=\"_blank\" rel=\"external\">swoole</a></p>\n<p><a href=\"http://www.ideawu.net/blog/archives/740.html\" target=\"_blank\" rel=\"external\">构建C1000K的服务器(1)– 基础</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://linux.cn/article-3661-1.html\" target=\"_blank\" rel=\"external\">免费的编程中文书籍索引</a></p>\n<p><a href=\"http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ\" target=\"_blank\" rel=\"external\">深入浅出 Redis client/server交互流程</a></p>\n<p><a href=\"http://www.laruence.com/2015/05/28/3038.html\" target=\"_blank\" rel=\"external\"> 在PHP中使用协程实现多任务调度 </a></p>\n<p><a href=\"http://www.laruence.com/2013/03/18/2846.html\" target=\"_blank\" rel=\"external\"> Yac (Yet Another Cache) – 无锁共享内存Cache </a></p>\n<p><a href=\"http://www.laruence.com/2013/08/14/2899.html\" target=\"_blank\" rel=\"external\"> 一个小玩意PHP-Valgrind的介绍 </a></p>\n<p><a href=\"http://geek.csdn.net/news/detail/77849\" target=\"_blank\" rel=\"external\"> 日请求过亿的Web系统PHP7升级实践 </a></p>\n<p><a href=\"http://www.cunmou.com/phpbook/index.md\" target=\"_blank\" rel=\"external\"> PHP扩展开发与内核应用 </a></p>\n<p><a href=\"http://www.php-internals.com/\" target=\"_blank\" rel=\"external\"> 深入理解PHP内核 </a></p>\n<p><a href=\"http://blog.csdn.net/micahriven/article/details/11678607\" target=\"_blank\" rel=\"external\"> PHP扩展开发：快速入门 </a></p>\n<p><a href=\"http://wiki.swoole.com/wiki/page/p-perf.html\" target=\"_blank\" rel=\"external\">swoole</a></p>\n<p><a href=\"http://www.ideawu.net/blog/archives/740.html\" target=\"_blank\" rel=\"external\">构建C1000K的服务器(1)– 基础</a></p>\n"},{"title":"Good Content","date":"2017-01-04T14:12:41.000Z","_content":"[免费的编程中文书籍索引](https://linux.cn/article-3661-1.html)\n[深入浅出 Redis client/server交互流程](http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ)\n[在PHP中使用协程实现多任务调度](http://www.laruence.com/2015/05/28/3038.html)\n[Yac (Yet Another Cache) – 无锁共享内存Cache](http://www.laruence.com/2013/03/18/2846.html)\n[一个小玩意PHP-Valgrind的介绍](http://www.laruence.com/2013/08/14/2899.html)\n[日请求过亿的Web系统PHP7升级实践](http://geek.csdn.net/news/detail/77849)\n[PHP扩展开发与内核应用](http://www.cunmou.com/phpbook/index.md)\n[深入理解PHP内核](http://www.php-internals.com/)\n[PHP扩展开发：快速入门](http://blog.csdn.net/micahriven/article/details/11678607)\n[swoole](http://wiki.swoole.com/wiki/page/p-perf.html)\n[构建C1000K的服务器(1)– 基础](http://www.ideawu.net/blog/archives/740.html)\n","source":"_posts/Hot-Content.md","raw":"---\ntitle: Good Content \ndate: 2017-01-04 22:12:41\ntags: content \n---\n[免费的编程中文书籍索引](https://linux.cn/article-3661-1.html)\n[深入浅出 Redis client/server交互流程](http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ)\n[在PHP中使用协程实现多任务调度](http://www.laruence.com/2015/05/28/3038.html)\n[Yac (Yet Another Cache) – 无锁共享内存Cache](http://www.laruence.com/2013/03/18/2846.html)\n[一个小玩意PHP-Valgrind的介绍](http://www.laruence.com/2013/08/14/2899.html)\n[日请求过亿的Web系统PHP7升级实践](http://geek.csdn.net/news/detail/77849)\n[PHP扩展开发与内核应用](http://www.cunmou.com/phpbook/index.md)\n[深入理解PHP内核](http://www.php-internals.com/)\n[PHP扩展开发：快速入门](http://blog.csdn.net/micahriven/article/details/11678607)\n[swoole](http://wiki.swoole.com/wiki/page/p-perf.html)\n[构建C1000K的服务器(1)– 基础](http://www.ideawu.net/blog/archives/740.html)\n","slug":"Hot-Content","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47qw0003w8wq1ny8fix8","content":"<p><a href=\"https://linux.cn/article-3661-1.html\" target=\"_blank\" rel=\"external\">免费的编程中文书籍索引</a><br><a href=\"http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ\" target=\"_blank\" rel=\"external\">深入浅出 Redis client/server交互流程</a><br><a href=\"http://www.laruence.com/2015/05/28/3038.html\" target=\"_blank\" rel=\"external\">在PHP中使用协程实现多任务调度</a><br><a href=\"http://www.laruence.com/2013/03/18/2846.html\" target=\"_blank\" rel=\"external\">Yac (Yet Another Cache) – 无锁共享内存Cache</a><br><a href=\"http://www.laruence.com/2013/08/14/2899.html\" target=\"_blank\" rel=\"external\">一个小玩意PHP-Valgrind的介绍</a><br><a href=\"http://geek.csdn.net/news/detail/77849\" target=\"_blank\" rel=\"external\">日请求过亿的Web系统PHP7升级实践</a><br><a href=\"http://www.cunmou.com/phpbook/index.md\" target=\"_blank\" rel=\"external\">PHP扩展开发与内核应用</a><br><a href=\"http://www.php-internals.com/\" target=\"_blank\" rel=\"external\">深入理解PHP内核</a><br><a href=\"http://blog.csdn.net/micahriven/article/details/11678607\" target=\"_blank\" rel=\"external\">PHP扩展开发：快速入门</a><br><a href=\"http://wiki.swoole.com/wiki/page/p-perf.html\" target=\"_blank\" rel=\"external\">swoole</a><br><a href=\"http://www.ideawu.net/blog/archives/740.html\" target=\"_blank\" rel=\"external\">构建C1000K的服务器(1)– 基础</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://linux.cn/article-3661-1.html\" target=\"_blank\" rel=\"external\">免费的编程中文书籍索引</a><br><a href=\"http://mp.weixin.qq.com/s/M_8JYKounmZWHPOXVJFNuQ\" target=\"_blank\" rel=\"external\">深入浅出 Redis client/server交互流程</a><br><a href=\"http://www.laruence.com/2015/05/28/3038.html\" target=\"_blank\" rel=\"external\">在PHP中使用协程实现多任务调度</a><br><a href=\"http://www.laruence.com/2013/03/18/2846.html\" target=\"_blank\" rel=\"external\">Yac (Yet Another Cache) – 无锁共享内存Cache</a><br><a href=\"http://www.laruence.com/2013/08/14/2899.html\" target=\"_blank\" rel=\"external\">一个小玩意PHP-Valgrind的介绍</a><br><a href=\"http://geek.csdn.net/news/detail/77849\" target=\"_blank\" rel=\"external\">日请求过亿的Web系统PHP7升级实践</a><br><a href=\"http://www.cunmou.com/phpbook/index.md\" target=\"_blank\" rel=\"external\">PHP扩展开发与内核应用</a><br><a href=\"http://www.php-internals.com/\" target=\"_blank\" rel=\"external\">深入理解PHP内核</a><br><a href=\"http://blog.csdn.net/micahriven/article/details/11678607\" target=\"_blank\" rel=\"external\">PHP扩展开发：快速入门</a><br><a href=\"http://wiki.swoole.com/wiki/page/p-perf.html\" target=\"_blank\" rel=\"external\">swoole</a><br><a href=\"http://www.ideawu.net/blog/archives/740.html\" target=\"_blank\" rel=\"external\">构建C1000K的服务器(1)– 基础</a></p>\n"},{"uuid":"adba71d0-0571-11e7-a54e-9d702a77433f","title":"elasticsearch5.0升级问题","date":"2017-03-10T09:12:26.000Z","_content":"\n\nelasticsearch 5.0 安装过程中遇到了一些问题，通过查找资料几乎都解决掉了，这里简单记录一下 ，供以后查阅参考，也希望可以帮助遇到同样问题的你。\n\n<!--more-->\n问题一：警告提示\n\n```shell\n[2016-11-06T16:27:21,712][WARN ][o.e.b.JNANatives ] unable to install syscall filter: \njava.lang.UnsupportedOperationException: seccomp unavailable: requires kernel 3.5+ with CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER compiled in\nat org.elasticsearch.bootstrap.Seccomp.linuxImpl(Seccomp.java:349) ~[elasticsearch-5.0.0.jar:5.0.0]\nat org.elasticsearch.bootstrap.Seccomp.init(Seccomp.java:630) ~[elasticsearch-5.0.0.jar:5.0.0]\n```\n\n报了一大串错误，其实只是一个警告。\n\n解决：使用linux版本，就不会出现此类问题了。\n\n \n\n问题二：ERROR: bootstrap checks failed\n\n```shell\nmax file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]\nmax number of threads [1024] for user [lishang] likely too low, increase to at least [2048]\n```\n\n解决：切换到root用户，编辑limits.conf 添加类似如下内容\n\nvi /etc/security/limits.conf \n\n添加如下内容:\n\n* soft nofile 65536\n\n* hard nofile 131072\n\n* soft nproc 2048\n\n* hard nproc 4096\n\n \n\n问题三：max number of threads [1024] for user [lish] likely too low, increase to at least [2048]\n\n解决：切换到root用户，进入limits.d目录下修改配置文件。\n\nvi /etc/security/limits.d/90-nproc.conf \n\n修改如下内容：\n\n* soft nproc 1024\n\n#修改为\n\n* soft nproc 2048\n \n\n问题四：max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]\n\n解决：切换到root用户修改配置sysctl.conf\n\nvi /etc/sysctl.conf \n\n添加下面配置：\n\nvm.max_map_count=655360\n\n并执行命令：\n\nsysctl -p\n\n然后，重新启动elasticsearch，即可启动成功。\n","source":"_posts/elasticsearch5-0升级问题.md","raw":"---\nuuid: adba71d0-0571-11e7-a54e-9d702a77433f\ntitle: elasticsearch5.0升级问题\ndate: 2017-03-10 17:12:26\ntags:\n---\n\n\nelasticsearch 5.0 安装过程中遇到了一些问题，通过查找资料几乎都解决掉了，这里简单记录一下 ，供以后查阅参考，也希望可以帮助遇到同样问题的你。\n\n<!--more-->\n问题一：警告提示\n\n```shell\n[2016-11-06T16:27:21,712][WARN ][o.e.b.JNANatives ] unable to install syscall filter: \njava.lang.UnsupportedOperationException: seccomp unavailable: requires kernel 3.5+ with CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER compiled in\nat org.elasticsearch.bootstrap.Seccomp.linuxImpl(Seccomp.java:349) ~[elasticsearch-5.0.0.jar:5.0.0]\nat org.elasticsearch.bootstrap.Seccomp.init(Seccomp.java:630) ~[elasticsearch-5.0.0.jar:5.0.0]\n```\n\n报了一大串错误，其实只是一个警告。\n\n解决：使用linux版本，就不会出现此类问题了。\n\n \n\n问题二：ERROR: bootstrap checks failed\n\n```shell\nmax file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]\nmax number of threads [1024] for user [lishang] likely too low, increase to at least [2048]\n```\n\n解决：切换到root用户，编辑limits.conf 添加类似如下内容\n\nvi /etc/security/limits.conf \n\n添加如下内容:\n\n* soft nofile 65536\n\n* hard nofile 131072\n\n* soft nproc 2048\n\n* hard nproc 4096\n\n \n\n问题三：max number of threads [1024] for user [lish] likely too low, increase to at least [2048]\n\n解决：切换到root用户，进入limits.d目录下修改配置文件。\n\nvi /etc/security/limits.d/90-nproc.conf \n\n修改如下内容：\n\n* soft nproc 1024\n\n#修改为\n\n* soft nproc 2048\n \n\n问题四：max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]\n\n解决：切换到root用户修改配置sysctl.conf\n\nvi /etc/sysctl.conf \n\n添加下面配置：\n\nvm.max_map_count=655360\n\n并执行命令：\n\nsysctl -p\n\n然后，重新启动elasticsearch，即可启动成功。\n","slug":"elasticsearch5-0升级问题","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47r10005w8wqemorqsf9","content":"<p>elasticsearch 5.0 安装过程中遇到了一些问题，通过查找资料几乎都解决掉了，这里简单记录一下 ，供以后查阅参考，也希望可以帮助遇到同样问题的你。</p>\n<a id=\"more\"></a>\n<p>问题一：警告提示</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[2016-11-06T16:27:21,712][WARN ][o.e.b.JNANatives ] unable to install syscall filter: </div><div class=\"line\">java.lang.UnsupportedOperationException: seccomp unavailable: requires kernel 3.5+ with CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER compiled in</div><div class=\"line\">at org.elasticsearch.bootstrap.Seccomp.linuxImpl(Seccomp.java:349) ~[elasticsearch-5.0.0.jar:5.0.0]</div><div class=\"line\">at org.elasticsearch.bootstrap.Seccomp.init(Seccomp.java:630) ~[elasticsearch-5.0.0.jar:5.0.0]</div></pre></td></tr></table></figure>\n<p>报了一大串错误，其实只是一个警告。</p>\n<p>解决：使用linux版本，就不会出现此类问题了。</p>\n<p>问题二：ERROR: bootstrap checks failed</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]</div><div class=\"line\">max number of threads [1024] for user [lishang] likely too low, increase to at least [2048]</div></pre></td></tr></table></figure>\n<p>解决：切换到root用户，编辑limits.conf 添加类似如下内容</p>\n<p>vi /etc/security/limits.conf </p>\n<p>添加如下内容:</p>\n<ul>\n<li><p>soft nofile 65536</p>\n</li>\n<li><p>hard nofile 131072</p>\n</li>\n<li><p>soft nproc 2048</p>\n</li>\n<li><p>hard nproc 4096</p>\n</li>\n</ul>\n<p>问题三：max number of threads [1024] for user [lish] likely too low, increase to at least [2048]</p>\n<p>解决：切换到root用户，进入limits.d目录下修改配置文件。</p>\n<p>vi /etc/security/limits.d/90-nproc.conf </p>\n<p>修改如下内容：</p>\n<ul>\n<li>soft nproc 1024</li>\n</ul>\n<p>#修改为</p>\n<ul>\n<li>soft nproc 2048</li>\n</ul>\n<p>问题四：max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]</p>\n<p>解决：切换到root用户修改配置sysctl.conf</p>\n<p>vi /etc/sysctl.conf </p>\n<p>添加下面配置：</p>\n<p>vm.max_map_count=655360</p>\n<p>并执行命令：</p>\n<p>sysctl -p</p>\n<p>然后，重新启动elasticsearch，即可启动成功。</p>\n","site":{"data":{}},"excerpt":"<p>elasticsearch 5.0 安装过程中遇到了一些问题，通过查找资料几乎都解决掉了，这里简单记录一下 ，供以后查阅参考，也希望可以帮助遇到同样问题的你。</p>","more":"<p>问题一：警告提示</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[2016-11-06T16:27:21,712][WARN ][o.e.b.JNANatives ] unable to install syscall filter: </div><div class=\"line\">java.lang.UnsupportedOperationException: seccomp unavailable: requires kernel 3.5+ with CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER compiled in</div><div class=\"line\">at org.elasticsearch.bootstrap.Seccomp.linuxImpl(Seccomp.java:349) ~[elasticsearch-5.0.0.jar:5.0.0]</div><div class=\"line\">at org.elasticsearch.bootstrap.Seccomp.init(Seccomp.java:630) ~[elasticsearch-5.0.0.jar:5.0.0]</div></pre></td></tr></table></figure>\n<p>报了一大串错误，其实只是一个警告。</p>\n<p>解决：使用linux版本，就不会出现此类问题了。</p>\n<p>问题二：ERROR: bootstrap checks failed</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]</div><div class=\"line\">max number of threads [1024] for user [lishang] likely too low, increase to at least [2048]</div></pre></td></tr></table></figure>\n<p>解决：切换到root用户，编辑limits.conf 添加类似如下内容</p>\n<p>vi /etc/security/limits.conf </p>\n<p>添加如下内容:</p>\n<ul>\n<li><p>soft nofile 65536</p>\n</li>\n<li><p>hard nofile 131072</p>\n</li>\n<li><p>soft nproc 2048</p>\n</li>\n<li><p>hard nproc 4096</p>\n</li>\n</ul>\n<p>问题三：max number of threads [1024] for user [lish] likely too low, increase to at least [2048]</p>\n<p>解决：切换到root用户，进入limits.d目录下修改配置文件。</p>\n<p>vi /etc/security/limits.d/90-nproc.conf </p>\n<p>修改如下内容：</p>\n<ul>\n<li>soft nproc 1024</li>\n</ul>\n<p>#修改为</p>\n<ul>\n<li>soft nproc 2048</li>\n</ul>\n<p>问题四：max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144]</p>\n<p>解决：切换到root用户修改配置sysctl.conf</p>\n<p>vi /etc/sysctl.conf </p>\n<p>添加下面配置：</p>\n<p>vm.max_map_count=655360</p>\n<p>并执行命令：</p>\n<p>sysctl -p</p>\n<p>然后，重新启动elasticsearch，即可启动成功。</p>"},{"uuid":"6a0a6020-30dd-11e7-b627-e906de4ca710","title":"explain详解.md","date":"2017-05-04T15:21:58.000Z","_content":"","source":"_posts/explain详解-md.md","raw":"---\nuuid: 6a0a6020-30dd-11e7-b627-e906de4ca710\ntitle: explain详解.md\ndate: 2017-05-04 23:21:58\ntags: mysql\n---\n","slug":"explain详解-md","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47r30006w8wq9pfo0bwk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"hexo blog","date":"2017-01-03T16:11:54.000Z","_content":"- hexo安装\n[hexo install](https://hexo.io/zh-cn/docs/setup.html)\n- hexo next主题\n[next theme](http://theme-next.iissnan.com/getting-started.html)\n- npm install hexo-deployer-git --save\n\t安装之后可以使用hexo deploy一键部署到github\n- hexo new 文章标题\n- hexo generate\n\t生成静态文件\n- hexo p == hexo publish\n- hexo d == hexo deploy#部署\n- hexo clean #清除缓存 网页正常情况下可以忽略此条命令\n- hexo server\n\t本地服务可以调试预览\n\thexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。\n\thexo server -s #静态模式\n\thexo server -p 5000 #更改端口\n\thexo server -i 192.168.1.1 #自定义 IP\n","source":"_posts/hexo-blog.md","raw":"---\ntitle: hexo blog\ndate: 2017-01-04 00:11:54\ntags: blog\n---\n- hexo安装\n[hexo install](https://hexo.io/zh-cn/docs/setup.html)\n- hexo next主题\n[next theme](http://theme-next.iissnan.com/getting-started.html)\n- npm install hexo-deployer-git --save\n\t安装之后可以使用hexo deploy一键部署到github\n- hexo new 文章标题\n- hexo generate\n\t生成静态文件\n- hexo p == hexo publish\n- hexo d == hexo deploy#部署\n- hexo clean #清除缓存 网页正常情况下可以忽略此条命令\n- hexo server\n\t本地服务可以调试预览\n\thexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。\n\thexo server -s #静态模式\n\thexo server -p 5000 #更改端口\n\thexo server -i 192.168.1.1 #自定义 IP\n","slug":"hexo-blog","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47r60007w8wqrvwvf4na","content":"<ul>\n<li>hexo安装<br><a href=\"https://hexo.io/zh-cn/docs/setup.html\" target=\"_blank\" rel=\"external\">hexo install</a></li>\n<li>hexo next主题<br><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">next theme</a></li>\n<li>npm install hexo-deployer-git –save<br>  安装之后可以使用hexo deploy一键部署到github</li>\n<li>hexo new 文章标题</li>\n<li>hexo generate<br>  生成静态文件</li>\n<li>hexo p == hexo publish</li>\n<li>hexo d == hexo deploy#部署</li>\n<li>hexo clean #清除缓存 网页正常情况下可以忽略此条命令</li>\n<li>hexo server<br>  本地服务可以调试预览<br>  hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。<br>  hexo server -s #静态模式<br>  hexo server -p 5000 #更改端口<br>  hexo server -i 192.168.1.1 #自定义 IP</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>hexo安装<br><a href=\"https://hexo.io/zh-cn/docs/setup.html\" target=\"_blank\" rel=\"external\">hexo install</a></li>\n<li>hexo next主题<br><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">next theme</a></li>\n<li>npm install hexo-deployer-git –save<br>  安装之后可以使用hexo deploy一键部署到github</li>\n<li>hexo new 文章标题</li>\n<li>hexo generate<br>  生成静态文件</li>\n<li>hexo p == hexo publish</li>\n<li>hexo d == hexo deploy#部署</li>\n<li>hexo clean #清除缓存 网页正常情况下可以忽略此条命令</li>\n<li>hexo server<br>  本地服务可以调试预览<br>  hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。<br>  hexo server -s #静态模式<br>  hexo server -p 5000 #更改端口<br>  hexo server -i 192.168.1.1 #自定义 IP</li>\n</ul>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n<!--more-->\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n<!--more-->\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-08-04T16:50:28.000Z","updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47ra000aw8wqte1wfxw0","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<a id=\"more\"></a>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>","more":"<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>"},{"title":"hexo install","date":"2017-08-04T17:10:07.000Z","_content":"\n## npm install hexo-deployer-git –save\n安装之后可以使用hexo deploy一键部署到github\n\n## hexo new 文章标题\n\n## hexo generate\n生成静态文件\n\n## hexo p\nhexo publish\n\n## hexo d\nhexo deploy#部署\n\n## hexo clean\n清除缓存 网页正常情况下可以忽略此条命令\n\n## hexo server\n本地服务可以调试预览\nHexo 会监视文件变动并自动更新，您无须重启服务器。\n\n## hexo server -s\n静态模式\n\n## hexo server -p 5000\n更改端口\n\n## hexo server -i 192.168.1.1\n自定义 IP\n","source":"_posts/hexo-install.md","raw":"---\ntitle: hexo install\ndate: 2017-08-05 01:10:07\ntags: note\n---\n\n## npm install hexo-deployer-git –save\n安装之后可以使用hexo deploy一键部署到github\n\n## hexo new 文章标题\n\n## hexo generate\n生成静态文件\n\n## hexo p\nhexo publish\n\n## hexo d\nhexo deploy#部署\n\n## hexo clean\n清除缓存 网页正常情况下可以忽略此条命令\n\n## hexo server\n本地服务可以调试预览\nHexo 会监视文件变动并自动更新，您无须重启服务器。\n\n## hexo server -s\n静态模式\n\n## hexo server -p 5000\n更改端口\n\n## hexo server -i 192.168.1.1\n自定义 IP\n","slug":"hexo-install","published":1,"updated":"2017-08-04T17:12:50.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rc000bw8wqn1kv38ph","content":"<h2 id=\"npm-install-hexo-deployer-git-–save\"><a href=\"#npm-install-hexo-deployer-git-–save\" class=\"headerlink\" title=\"npm install hexo-deployer-git –save\"></a>npm install hexo-deployer-git –save</h2><p>安装之后可以使用hexo deploy一键部署到github</p>\n<h2 id=\"hexo-new-文章标题\"><a href=\"#hexo-new-文章标题\" class=\"headerlink\" title=\"hexo new 文章标题\"></a>hexo new 文章标题</h2><h2 id=\"hexo-generate\"><a href=\"#hexo-generate\" class=\"headerlink\" title=\"hexo generate\"></a>hexo generate</h2><p>生成静态文件</p>\n<h2 id=\"hexo-p\"><a href=\"#hexo-p\" class=\"headerlink\" title=\"hexo p\"></a>hexo p</h2><p>hexo publish</p>\n<h2 id=\"hexo-d\"><a href=\"#hexo-d\" class=\"headerlink\" title=\"hexo d\"></a>hexo d</h2><p>hexo deploy#部署</p>\n<h2 id=\"hexo-clean\"><a href=\"#hexo-clean\" class=\"headerlink\" title=\"hexo clean\"></a>hexo clean</h2><p>清除缓存 网页正常情况下可以忽略此条命令</p>\n<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo server\"></a>hexo server</h2><p>本地服务可以调试预览<br>Hexo 会监视文件变动并自动更新，您无须重启服务器。</p>\n<h2 id=\"hexo-server-s\"><a href=\"#hexo-server-s\" class=\"headerlink\" title=\"hexo server -s\"></a>hexo server -s</h2><p>静态模式</p>\n<h2 id=\"hexo-server-p-5000\"><a href=\"#hexo-server-p-5000\" class=\"headerlink\" title=\"hexo server -p 5000\"></a>hexo server -p 5000</h2><p>更改端口</p>\n<h2 id=\"hexo-server-i-192-168-1-1\"><a href=\"#hexo-server-i-192-168-1-1\" class=\"headerlink\" title=\"hexo server -i 192.168.1.1\"></a>hexo server -i 192.168.1.1</h2><p>自定义 IP</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"npm-install-hexo-deployer-git-–save\"><a href=\"#npm-install-hexo-deployer-git-–save\" class=\"headerlink\" title=\"npm install hexo-deployer-git –save\"></a>npm install hexo-deployer-git –save</h2><p>安装之后可以使用hexo deploy一键部署到github</p>\n<h2 id=\"hexo-new-文章标题\"><a href=\"#hexo-new-文章标题\" class=\"headerlink\" title=\"hexo new 文章标题\"></a>hexo new 文章标题</h2><h2 id=\"hexo-generate\"><a href=\"#hexo-generate\" class=\"headerlink\" title=\"hexo generate\"></a>hexo generate</h2><p>生成静态文件</p>\n<h2 id=\"hexo-p\"><a href=\"#hexo-p\" class=\"headerlink\" title=\"hexo p\"></a>hexo p</h2><p>hexo publish</p>\n<h2 id=\"hexo-d\"><a href=\"#hexo-d\" class=\"headerlink\" title=\"hexo d\"></a>hexo d</h2><p>hexo deploy#部署</p>\n<h2 id=\"hexo-clean\"><a href=\"#hexo-clean\" class=\"headerlink\" title=\"hexo clean\"></a>hexo clean</h2><p>清除缓存 网页正常情况下可以忽略此条命令</p>\n<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo server\"></a>hexo server</h2><p>本地服务可以调试预览<br>Hexo 会监视文件变动并自动更新，您无须重启服务器。</p>\n<h2 id=\"hexo-server-s\"><a href=\"#hexo-server-s\" class=\"headerlink\" title=\"hexo server -s\"></a>hexo server -s</h2><p>静态模式</p>\n<h2 id=\"hexo-server-p-5000\"><a href=\"#hexo-server-p-5000\" class=\"headerlink\" title=\"hexo server -p 5000\"></a>hexo server -p 5000</h2><p>更改端口</p>\n<h2 id=\"hexo-server-i-192-168-1-1\"><a href=\"#hexo-server-i-192-168-1-1\" class=\"headerlink\" title=\"hexo server -i 192.168.1.1\"></a>hexo server -i 192.168.1.1</h2><p>自定义 IP</p>\n"},{"title":"kubernetes安装","date":"2017-08-04T09:53:20.000Z","_content":"\n## 安装minikube\n\n```\ncurl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.7.1/minikube-darwin-amd64\nchmod +x minikube\nsudo mv minikube /usr/local/bin/\n```\n\n\n## 启动minikube\n```\nminikube start\nminikube status\n```\n\n\n## 安装kubectl\n\n```\ncurl -Lo kubectl http://storage.googleapis.com/kubernetes-release/release/v1.3.0/bin/darwin/amd64/kubectl\nchmod +x kubectl\nsudo mv kubectl /usr/local/bin/\n```\n\n\n## 查看\n\n```\nkubectl get pods --all-namespaces\neval $(minikube docker-env)\n```\n\n\n## 参考doc\n[Kubernetes in 30 minutes with minikube on Mac](http://www.rushiagr.com/blog/2016/08/16/kubernetes-in-30-minutes-with-minikube-on-mac/)\n","source":"_posts/kubernetes安装.md","raw":"---\ntitle: kubernetes安装\ndate: 2017-08-04 17:53:20\ntags: kubernetes\n---\n\n## 安装minikube\n\n```\ncurl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.7.1/minikube-darwin-amd64\nchmod +x minikube\nsudo mv minikube /usr/local/bin/\n```\n\n\n## 启动minikube\n```\nminikube start\nminikube status\n```\n\n\n## 安装kubectl\n\n```\ncurl -Lo kubectl http://storage.googleapis.com/kubernetes-release/release/v1.3.0/bin/darwin/amd64/kubectl\nchmod +x kubectl\nsudo mv kubectl /usr/local/bin/\n```\n\n\n## 查看\n\n```\nkubectl get pods --all-namespaces\neval $(minikube docker-env)\n```\n\n\n## 参考doc\n[Kubernetes in 30 minutes with minikube on Mac](http://www.rushiagr.com/blog/2016/08/16/kubernetes-in-30-minutes-with-minikube-on-mac/)\n","slug":"kubernetes安装","published":1,"updated":"2017-08-04T16:37:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47re000dw8wqlk7btgfx","content":"<h2 id=\"安装minikube\"><a href=\"#安装minikube\" class=\"headerlink\" title=\"安装minikube\"></a>安装minikube</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.7.1/minikube-darwin-amd64</div><div class=\"line\">chmod +x minikube</div><div class=\"line\">sudo mv minikube /usr/local/bin/</div></pre></td></tr></table></figure>\n<h2 id=\"启动minikube\"><a href=\"#启动minikube\" class=\"headerlink\" title=\"启动minikube\"></a>启动minikube</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">minikube start</div><div class=\"line\">minikube status</div></pre></td></tr></table></figure>\n<h2 id=\"安装kubectl\"><a href=\"#安装kubectl\" class=\"headerlink\" title=\"安装kubectl\"></a>安装kubectl</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -Lo kubectl http://storage.googleapis.com/kubernetes-release/release/v1.3.0/bin/darwin/amd64/kubectl</div><div class=\"line\">chmod +x kubectl</div><div class=\"line\">sudo mv kubectl /usr/local/bin/</div></pre></td></tr></table></figure>\n<h2 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">kubectl get pods --all-namespaces</div><div class=\"line\">eval $(minikube docker-env)</div></pre></td></tr></table></figure>\n<h2 id=\"参考doc\"><a href=\"#参考doc\" class=\"headerlink\" title=\"参考doc\"></a>参考doc</h2><p><a href=\"http://www.rushiagr.com/blog/2016/08/16/kubernetes-in-30-minutes-with-minikube-on-mac/\" target=\"_blank\" rel=\"external\">Kubernetes in 30 minutes with minikube on Mac</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装minikube\"><a href=\"#安装minikube\" class=\"headerlink\" title=\"安装minikube\"></a>安装minikube</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.7.1/minikube-darwin-amd64</div><div class=\"line\">chmod +x minikube</div><div class=\"line\">sudo mv minikube /usr/local/bin/</div></pre></td></tr></table></figure>\n<h2 id=\"启动minikube\"><a href=\"#启动minikube\" class=\"headerlink\" title=\"启动minikube\"></a>启动minikube</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">minikube start</div><div class=\"line\">minikube status</div></pre></td></tr></table></figure>\n<h2 id=\"安装kubectl\"><a href=\"#安装kubectl\" class=\"headerlink\" title=\"安装kubectl\"></a>安装kubectl</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -Lo kubectl http://storage.googleapis.com/kubernetes-release/release/v1.3.0/bin/darwin/amd64/kubectl</div><div class=\"line\">chmod +x kubectl</div><div class=\"line\">sudo mv kubectl /usr/local/bin/</div></pre></td></tr></table></figure>\n<h2 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">kubectl get pods --all-namespaces</div><div class=\"line\">eval $(minikube docker-env)</div></pre></td></tr></table></figure>\n<h2 id=\"参考doc\"><a href=\"#参考doc\" class=\"headerlink\" title=\"参考doc\"></a>参考doc</h2><p><a href=\"http://www.rushiagr.com/blog/2016/08/16/kubernetes-in-30-minutes-with-minikube-on-mac/\" target=\"_blank\" rel=\"external\">Kubernetes in 30 minutes with minikube on Mac</a></p>\n"},{"title":"php extension","date":"2017-01-07T16:23:28.000Z","_content":"\nPHP扩展（PECL）跟PHP引擎一样都是使用C语言开发。PHP核心开发组成员鸟哥Laruence使用的是VIM进行PHP开发。\nhttp://www.laruence.com/2011/09/13/2139.html\n书籍: http://www.walu.cc/phpbook/\n案例: php-src/ext\nPECL开发邮件组: http://news.php.net/php.pecl.dev\n尽量编写一些phpt测试用例,php-src/tests下有很多参考.\n测试时用--enable-debug编译PHP,要做到执行你的扩展逻辑,不输出任何错误信息.\n用valgrind检测内存泄露.\n<!--more-->\n\nPHP异步网络扩展Swoole作者博客： http://rango.swoole.com/\nPHP中文分词扩展SCWS和XunSearch全文搜索引擎作者博客： http://hightman.cn\nPHP代码加密扩展php-beast作者博客：http://my.oschina.net/liexusong/blog\n\n如果你在Linux上要使用IDE开发，可以看看Eclipse CDT或者[Qt Creator](http://my.oschina.net/eechen/blog/166969)。\n\n构建PHP扩展:\nhttp://wiki.swoole.com/wiki/page/238.html (视频教程)\nhttp://php.net/manual/zh/internals2.buildsys.php\nphp-src/ext/ext_skel脚本用于生成PECL扩展源码骨架.\n","source":"_posts/php-extension.md","raw":"---\ntitle: php extension\ndate: 2017-01-08 00:23:28\ntags: php\n---\n\nPHP扩展（PECL）跟PHP引擎一样都是使用C语言开发。PHP核心开发组成员鸟哥Laruence使用的是VIM进行PHP开发。\nhttp://www.laruence.com/2011/09/13/2139.html\n书籍: http://www.walu.cc/phpbook/\n案例: php-src/ext\nPECL开发邮件组: http://news.php.net/php.pecl.dev\n尽量编写一些phpt测试用例,php-src/tests下有很多参考.\n测试时用--enable-debug编译PHP,要做到执行你的扩展逻辑,不输出任何错误信息.\n用valgrind检测内存泄露.\n<!--more-->\n\nPHP异步网络扩展Swoole作者博客： http://rango.swoole.com/\nPHP中文分词扩展SCWS和XunSearch全文搜索引擎作者博客： http://hightman.cn\nPHP代码加密扩展php-beast作者博客：http://my.oschina.net/liexusong/blog\n\n如果你在Linux上要使用IDE开发，可以看看Eclipse CDT或者[Qt Creator](http://my.oschina.net/eechen/blog/166969)。\n\n构建PHP扩展:\nhttp://wiki.swoole.com/wiki/page/238.html (视频教程)\nhttp://php.net/manual/zh/internals2.buildsys.php\nphp-src/ext/ext_skel脚本用于生成PECL扩展源码骨架.\n","slug":"php-extension","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rg000fw8wqrazhysve","content":"<p>PHP扩展（PECL）跟PHP引擎一样都是使用C语言开发。PHP核心开发组成员鸟哥Laruence使用的是VIM进行PHP开发。<br><a href=\"http://www.laruence.com/2011/09/13/2139.html\" target=\"_blank\" rel=\"external\">http://www.laruence.com/2011/09/13/2139.html</a><br>书籍: <a href=\"http://www.walu.cc/phpbook/\" target=\"_blank\" rel=\"external\">http://www.walu.cc/phpbook/</a><br>案例: php-src/ext<br>PECL开发邮件组: <a href=\"http://news.php.net/php.pecl.dev\" target=\"_blank\" rel=\"external\">http://news.php.net/php.pecl.dev</a><br>尽量编写一些phpt测试用例,php-src/tests下有很多参考.<br>测试时用–enable-debug编译PHP,要做到执行你的扩展逻辑,不输出任何错误信息.<br>用valgrind检测内存泄露.<br><a id=\"more\"></a></p>\n<p>PHP异步网络扩展Swoole作者博客： <a href=\"http://rango.swoole.com/\" target=\"_blank\" rel=\"external\">http://rango.swoole.com/</a><br>PHP中文分词扩展SCWS和XunSearch全文搜索引擎作者博客： <a href=\"http://hightman.cn\" target=\"_blank\" rel=\"external\">http://hightman.cn</a><br>PHP代码加密扩展php-beast作者博客：<a href=\"http://my.oschina.net/liexusong/blog\" target=\"_blank\" rel=\"external\">http://my.oschina.net/liexusong/blog</a></p>\n<p>如果你在Linux上要使用IDE开发，可以看看Eclipse CDT或者<a href=\"http://my.oschina.net/eechen/blog/166969\" target=\"_blank\" rel=\"external\">Qt Creator</a>。</p>\n<p>构建PHP扩展:<br><a href=\"http://wiki.swoole.com/wiki/page/238.html\" target=\"_blank\" rel=\"external\">http://wiki.swoole.com/wiki/page/238.html</a> (视频教程)<br><a href=\"http://php.net/manual/zh/internals2.buildsys.php\" target=\"_blank\" rel=\"external\">http://php.net/manual/zh/internals2.buildsys.php</a><br>php-src/ext/ext_skel脚本用于生成PECL扩展源码骨架.</p>\n","site":{"data":{}},"excerpt":"<p>PHP扩展（PECL）跟PHP引擎一样都是使用C语言开发。PHP核心开发组成员鸟哥Laruence使用的是VIM进行PHP开发。<br><a href=\"http://www.laruence.com/2011/09/13/2139.html\" target=\"_blank\" rel=\"external\">http://www.laruence.com/2011/09/13/2139.html</a><br>书籍: <a href=\"http://www.walu.cc/phpbook/\" target=\"_blank\" rel=\"external\">http://www.walu.cc/phpbook/</a><br>案例: php-src/ext<br>PECL开发邮件组: <a href=\"http://news.php.net/php.pecl.dev\" target=\"_blank\" rel=\"external\">http://news.php.net/php.pecl.dev</a><br>尽量编写一些phpt测试用例,php-src/tests下有很多参考.<br>测试时用–enable-debug编译PHP,要做到执行你的扩展逻辑,不输出任何错误信息.<br>用valgrind检测内存泄露.<br>","more":"</p>\n<p>PHP异步网络扩展Swoole作者博客： <a href=\"http://rango.swoole.com/\" target=\"_blank\" rel=\"external\">http://rango.swoole.com/</a><br>PHP中文分词扩展SCWS和XunSearch全文搜索引擎作者博客： <a href=\"http://hightman.cn\" target=\"_blank\" rel=\"external\">http://hightman.cn</a><br>PHP代码加密扩展php-beast作者博客：<a href=\"http://my.oschina.net/liexusong/blog\" target=\"_blank\" rel=\"external\">http://my.oschina.net/liexusong/blog</a></p>\n<p>如果你在Linux上要使用IDE开发，可以看看Eclipse CDT或者<a href=\"http://my.oschina.net/eechen/blog/166969\" target=\"_blank\" rel=\"external\">Qt Creator</a>。</p>\n<p>构建PHP扩展:<br><a href=\"http://wiki.swoole.com/wiki/page/238.html\" target=\"_blank\" rel=\"external\">http://wiki.swoole.com/wiki/page/238.html</a> (视频教程)<br><a href=\"http://php.net/manual/zh/internals2.buildsys.php\" target=\"_blank\" rel=\"external\">http://php.net/manual/zh/internals2.buildsys.php</a><br>php-src/ext/ext_skel脚本用于生成PECL扩展源码骨架.</p>"},{"title":"number bit","date":"2017-01-04T14:54:04.000Z","_content":"\n```php\npublic function test()\n{\n\t$advId = 1458013447;\n\t$id = 5;\n\techo $total = $advId << 32 | $id;\n\techo PHP_EOL;\n\n\techo $result = $total & 0xFFFFFFFF;\n\techo PHP_EOL;\n\techo $result = $total >> 32 & 0xFFFFFFFF;\n\techo PHP_EOL;\n}\n```\n","source":"_posts/number-bit.md","raw":"---\ntitle: number bit\ndate: 2017-01-04 22:54:04\ntags: php\n---\n\n```php\npublic function test()\n{\n\t$advId = 1458013447;\n\t$id = 5;\n\techo $total = $advId << 32 | $id;\n\techo PHP_EOL;\n\n\techo $result = $total & 0xFFFFFFFF;\n\techo PHP_EOL;\n\techo $result = $total >> 32 & 0xFFFFFFFF;\n\techo PHP_EOL;\n}\n```\n","slug":"number-bit","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rj000iw8wqblmsje8i","content":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">\t$advId = <span class=\"number\">1458013447</span>;</div><div class=\"line\">\t$id = <span class=\"number\">5</span>;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> $total = $advId &lt;&lt; <span class=\"number\">32</span> | $id;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">echo</span> $result = $total &amp; <span class=\"number\">0xFFFFFFFF</span>;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> $result = $total &gt;&gt; <span class=\"number\">32</span> &amp; <span class=\"number\">0xFFFFFFFF</span>;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">\t$advId = <span class=\"number\">1458013447</span>;</div><div class=\"line\">\t$id = <span class=\"number\">5</span>;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> $total = $advId &lt;&lt; <span class=\"number\">32</span> | $id;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">echo</span> $result = $total &amp; <span class=\"number\">0xFFFFFFFF</span>;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> $result = $total &gt;&gt; <span class=\"number\">32</span> &amp; <span class=\"number\">0xFFFFFFFF</span>;</div><div class=\"line\">\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"uuid":"a26ff6c0-3a54-11e7-b496-b5e2f51b1564","title":"php的yield和生成器","date":"2017-05-16T16:28:03.000Z","_content":"\n相比较迭代器，**生成器**提供了一种更容易的方法来实现简单的对象迭代，性能开销和复杂性都大大降低。\n\n一个生成器函数看起来像一个普通的函数，不同的是普通函数返回一个值，而一个生成可以yield生成许多它所需要的值，并且每一次的生成返回值只是暂停当前的执行状态，当下次调用生成器函数时，PHP会从上次暂停的状态继续执行下去。\n\n<!--more-->\n我们在使用生成器的时候可以像关联数组那样指定一个键名对应生成的值。如下生成一个键值对与定义一个关联数组相似。\n\n```php\nfunction xrange($start, $limit, $step = 1) {\n    for ($i = $start, $j = 0; $i <= $limit; $i += $step, $j++) {\n        // 给予键值\n        yield $j => $i;\n    }\n}\n\n$xrange = xrange(1, 10, 2);\nforeach ($xrange as $key => $value) {\n    echo $key . ' => ' . $value . \"\\n\";\n}\n\n```\n\n实际上生成器函数返回的是一个Generator对象，这个对象不能通过new实例化，并且实现了Iterator接口。\n\n```php\nGenerator implements Iterator {\n    public mixed current(void)\n    public mixed key(void)\n    public void next(void)\n    public void rewind(void)\n    // 向生成器传入一个值\n    public mixed send(mixed $value)\n    public void throw(Exception $exception)\n    public bool valid(void)\n    // 序列化回调\n    public void __wakeup(void)\n}\n```\n\n可以看到出了实现Iterator的接口之外Generator还添加了send方法，用来向生成器传入一个值，并且当做yield表达式的结果，然后继续执行生成器，直到遇到下一个yield后会再次停住。\n\n```php\nfunction printer() {\n    while(true) {\n        echo 'receive: ' . yield . \"\\n\";\n    }\n}\n\n$printer = printer();\n$printer->send('Hello');\n$printer->send('world');\n```\n\n以上的例子会输出：\n```shell\nreceive: Hello\nreceive: world\n```\n\n在上面的例子中，经过第一个send()方法，yield表达式的值变为Hello，之后执行echo语句，输出第一条结果receive: Hello，输出完毕后继续执行到第二个yield处，只不过当前的语句没有执行到底，不会执行输出。如果将例子改改就能够看出来yield的继续执行到哪里。\n\n```php\nfunction printer() {\n    $i = 1;\n    while(true) {\n        echo 'this is the yield ' . $i . \"\\n\";\n        echo 'receive: ' . yield . \"\\n\";\n        $i++;\n    }\n}\n\n$printer = printer();\n$printer->send('Hello');\n$printer->send('world');\n\n```\n\n这次的输出便会变为:\n\n```shell\nthis is the yield 1\nreceive: hello\nthis is the yield 2\nreceive: world\nthis is the yield 3\n```\n\n这边可以清楚的看出send之后的继续执行到第二个yield处，之前的代码照常执行。\n\n我们再对例子进行适当的修改：\n\n```php\nfunction printer() {\n    $i = 1;\n    while(true) {\n        echo 'this is the yield ' . (yield $i) . \"\\n\";\n        $i++;\n    }\n}\n\n$printer = printer();\nvar_dump($printer->send('first'));\nvar_dump($printer->send('second'));\n```\n\n执行一下会发现结果为:\n\n```shell\nthis is the yield first\nint(2)\nthis is the yield second\nint(3)\n```\n\n让我们来看一下，是不是发现了问题，跑出来的结果不是从1开始的而是从2开始，这是为啥嘞，我们来分析一下：\n在此之前我们先来跑另外一段代码：\n\n```php\nfunction printer() {\n    $i = 1;\n    while(true) {\n        echo 'this is the yield ' . (yield $i) . \"\\n\";\n        $i++;\n    }\n}\n\n$printer = printer();\nvar_dump($printer->current());\nvar_dump($printer->send('first'));\nvar_dump($printer->send('second'));\n```\n\n这个时候我们会发现执行的结果变成了:\n\n```shell\nint(1)\nthis is the yield first\nint(2)\nthis is the yield second\nint(3)\n```\n\n可以看到在第一次调用生成器函数的时候，生成器已经执行到了第一个yield表达式处，所以在$printer->send('first')之前，生成器便已经yield 1出来了，只是没有对这个生成的值进行接收处理，在send()了之后，echo语句便会紧接着完整的执行，执行完毕继续执行$i++，下次循环便是var_dump(2)。\n\n至此，我们看到了yield不仅能够返回数据而且还可以接收数据，而且两者可以同时进行，此时yield便成了数据双向传输的工具，这就为了实现协程提供了可能性。\n\n\n\n参考[在PHP中使用协程实现多任务调度](http://www.laruence.com/2015/05/28/3038.html)\n加深理解\n","source":"_posts/php的yield和生成器.md","raw":"---\nuuid: a26ff6c0-3a54-11e7-b496-b5e2f51b1564\ntitle: php的yield和生成器\ndate: 2017-05-17 00:28:03\ntags: php\n---\n\n相比较迭代器，**生成器**提供了一种更容易的方法来实现简单的对象迭代，性能开销和复杂性都大大降低。\n\n一个生成器函数看起来像一个普通的函数，不同的是普通函数返回一个值，而一个生成可以yield生成许多它所需要的值，并且每一次的生成返回值只是暂停当前的执行状态，当下次调用生成器函数时，PHP会从上次暂停的状态继续执行下去。\n\n<!--more-->\n我们在使用生成器的时候可以像关联数组那样指定一个键名对应生成的值。如下生成一个键值对与定义一个关联数组相似。\n\n```php\nfunction xrange($start, $limit, $step = 1) {\n    for ($i = $start, $j = 0; $i <= $limit; $i += $step, $j++) {\n        // 给予键值\n        yield $j => $i;\n    }\n}\n\n$xrange = xrange(1, 10, 2);\nforeach ($xrange as $key => $value) {\n    echo $key . ' => ' . $value . \"\\n\";\n}\n\n```\n\n实际上生成器函数返回的是一个Generator对象，这个对象不能通过new实例化，并且实现了Iterator接口。\n\n```php\nGenerator implements Iterator {\n    public mixed current(void)\n    public mixed key(void)\n    public void next(void)\n    public void rewind(void)\n    // 向生成器传入一个值\n    public mixed send(mixed $value)\n    public void throw(Exception $exception)\n    public bool valid(void)\n    // 序列化回调\n    public void __wakeup(void)\n}\n```\n\n可以看到出了实现Iterator的接口之外Generator还添加了send方法，用来向生成器传入一个值，并且当做yield表达式的结果，然后继续执行生成器，直到遇到下一个yield后会再次停住。\n\n```php\nfunction printer() {\n    while(true) {\n        echo 'receive: ' . yield . \"\\n\";\n    }\n}\n\n$printer = printer();\n$printer->send('Hello');\n$printer->send('world');\n```\n\n以上的例子会输出：\n```shell\nreceive: Hello\nreceive: world\n```\n\n在上面的例子中，经过第一个send()方法，yield表达式的值变为Hello，之后执行echo语句，输出第一条结果receive: Hello，输出完毕后继续执行到第二个yield处，只不过当前的语句没有执行到底，不会执行输出。如果将例子改改就能够看出来yield的继续执行到哪里。\n\n```php\nfunction printer() {\n    $i = 1;\n    while(true) {\n        echo 'this is the yield ' . $i . \"\\n\";\n        echo 'receive: ' . yield . \"\\n\";\n        $i++;\n    }\n}\n\n$printer = printer();\n$printer->send('Hello');\n$printer->send('world');\n\n```\n\n这次的输出便会变为:\n\n```shell\nthis is the yield 1\nreceive: hello\nthis is the yield 2\nreceive: world\nthis is the yield 3\n```\n\n这边可以清楚的看出send之后的继续执行到第二个yield处，之前的代码照常执行。\n\n我们再对例子进行适当的修改：\n\n```php\nfunction printer() {\n    $i = 1;\n    while(true) {\n        echo 'this is the yield ' . (yield $i) . \"\\n\";\n        $i++;\n    }\n}\n\n$printer = printer();\nvar_dump($printer->send('first'));\nvar_dump($printer->send('second'));\n```\n\n执行一下会发现结果为:\n\n```shell\nthis is the yield first\nint(2)\nthis is the yield second\nint(3)\n```\n\n让我们来看一下，是不是发现了问题，跑出来的结果不是从1开始的而是从2开始，这是为啥嘞，我们来分析一下：\n在此之前我们先来跑另外一段代码：\n\n```php\nfunction printer() {\n    $i = 1;\n    while(true) {\n        echo 'this is the yield ' . (yield $i) . \"\\n\";\n        $i++;\n    }\n}\n\n$printer = printer();\nvar_dump($printer->current());\nvar_dump($printer->send('first'));\nvar_dump($printer->send('second'));\n```\n\n这个时候我们会发现执行的结果变成了:\n\n```shell\nint(1)\nthis is the yield first\nint(2)\nthis is the yield second\nint(3)\n```\n\n可以看到在第一次调用生成器函数的时候，生成器已经执行到了第一个yield表达式处，所以在$printer->send('first')之前，生成器便已经yield 1出来了，只是没有对这个生成的值进行接收处理，在send()了之后，echo语句便会紧接着完整的执行，执行完毕继续执行$i++，下次循环便是var_dump(2)。\n\n至此，我们看到了yield不仅能够返回数据而且还可以接收数据，而且两者可以同时进行，此时yield便成了数据双向传输的工具，这就为了实现协程提供了可能性。\n\n\n\n参考[在PHP中使用协程实现多任务调度](http://www.laruence.com/2015/05/28/3038.html)\n加深理解\n","slug":"php的yield和生成器","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rl000kw8wqqsg4c4tl","content":"<p>相比较迭代器，<strong>生成器</strong>提供了一种更容易的方法来实现简单的对象迭代，性能开销和复杂性都大大降低。</p>\n<p>一个生成器函数看起来像一个普通的函数，不同的是普通函数返回一个值，而一个生成可以yield生成许多它所需要的值，并且每一次的生成返回值只是暂停当前的执行状态，当下次调用生成器函数时，PHP会从上次暂停的状态继续执行下去。</p>\n<a id=\"more\"></a>\n<p>我们在使用生成器的时候可以像关联数组那样指定一个键名对应生成的值。如下生成一个键值对与定义一个关联数组相似。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xrange</span><span class=\"params\">($start, $limit, $step = <span class=\"number\">1</span>)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> ($i = $start, $j = <span class=\"number\">0</span>; $i &lt;= $limit; $i += $step, $j++) &#123;</div><div class=\"line\">        <span class=\"comment\">// 给予键值</span></div><div class=\"line\">        <span class=\"keyword\">yield</span> $j =&gt; $i;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$xrange = xrange(<span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">2</span>);</div><div class=\"line\"><span class=\"keyword\">foreach</span> ($xrange <span class=\"keyword\">as</span> $key =&gt; $value) &#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> $key . <span class=\"string\">' =&gt; '</span> . $value . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>实际上生成器函数返回的是一个Generator对象，这个对象不能通过new实例化，并且实现了Iterator接口。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">Generator implements Iterator &#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> mixed current(void)</div><div class=\"line\">    <span class=\"keyword\">public</span> mixed key(void)</div><div class=\"line\">    <span class=\"keyword\">public</span> void next(void)</div><div class=\"line\">    <span class=\"keyword\">public</span> void rewind(void)</div><div class=\"line\">    <span class=\"comment\">// 向生成器传入一个值</span></div><div class=\"line\">    <span class=\"keyword\">public</span> mixed send(mixed $value)</div><div class=\"line\">    <span class=\"keyword\">public</span> void <span class=\"keyword\">throw</span>(<span class=\"keyword\">Exception</span> $exception)</div><div class=\"line\">    <span class=\"keyword\">public</span> bool valid(void)</div><div class=\"line\">    <span class=\"comment\">// 序列化回调</span></div><div class=\"line\">    <span class=\"keyword\">public</span> void __wakeup(void)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以看到出了实现Iterator的接口之外Generator还添加了send方法，用来向生成器传入一个值，并且当做yield表达式的结果，然后继续执行生成器，直到遇到下一个yield后会再次停住。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'receive: '</span> . <span class=\"keyword\">yield</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'Hello'</span>);</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'world'</span>);</div></pre></td></tr></table></figure>\n<p>以上的例子会输出：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive: Hello</div><div class=\"line\">receive: world</div></pre></td></tr></table></figure></p>\n<p>在上面的例子中，经过第一个send()方法，yield表达式的值变为Hello，之后执行echo语句，输出第一条结果receive: Hello，输出完毕后继续执行到第二个yield处，只不过当前的语句没有执行到底，不会执行输出。如果将例子改改就能够看出来yield的继续执行到哪里。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $i = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'this is the yield '</span> . $i . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'receive: '</span> . <span class=\"keyword\">yield</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        $i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'Hello'</span>);</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'world'</span>);</div></pre></td></tr></table></figure>\n<p>这次的输出便会变为:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">this is the yield 1</div><div class=\"line\">receive: hello</div><div class=\"line\">this is the yield 2</div><div class=\"line\">receive: world</div><div class=\"line\">this is the yield 3</div></pre></td></tr></table></figure>\n<p>这边可以清楚的看出send之后的继续执行到第二个yield处，之前的代码照常执行。</p>\n<p>我们再对例子进行适当的修改：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $i = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'this is the yield '</span> . (<span class=\"keyword\">yield</span> $i) . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        $i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'first'</span>));</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'second'</span>));</div></pre></td></tr></table></figure>\n<p>执行一下会发现结果为:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">this is the yield first</div><div class=\"line\">int(2)</div><div class=\"line\">this is the yield second</div><div class=\"line\">int(3)</div></pre></td></tr></table></figure>\n<p>让我们来看一下，是不是发现了问题，跑出来的结果不是从1开始的而是从2开始，这是为啥嘞，我们来分析一下：<br>在此之前我们先来跑另外一段代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $i = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'this is the yield '</span> . (<span class=\"keyword\">yield</span> $i) . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        $i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">var_dump($printer-&gt;current());</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'first'</span>));</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'second'</span>));</div></pre></td></tr></table></figure>\n<p>这个时候我们会发现执行的结果变成了:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">int(1)</div><div class=\"line\">this is the yield first</div><div class=\"line\">int(2)</div><div class=\"line\">this is the yield second</div><div class=\"line\">int(3)</div></pre></td></tr></table></figure>\n<p>可以看到在第一次调用生成器函数的时候，生成器已经执行到了第一个yield表达式处，所以在$printer-&gt;send(‘first’)之前，生成器便已经yield 1出来了，只是没有对这个生成的值进行接收处理，在send()了之后，echo语句便会紧接着完整的执行，执行完毕继续执行$i++，下次循环便是var_dump(2)。</p>\n<p>至此，我们看到了yield不仅能够返回数据而且还可以接收数据，而且两者可以同时进行，此时yield便成了数据双向传输的工具，这就为了实现协程提供了可能性。</p>\n<p>参考<a href=\"http://www.laruence.com/2015/05/28/3038.html\" target=\"_blank\" rel=\"external\">在PHP中使用协程实现多任务调度</a><br>加深理解</p>\n","site":{"data":{}},"excerpt":"<p>相比较迭代器，<strong>生成器</strong>提供了一种更容易的方法来实现简单的对象迭代，性能开销和复杂性都大大降低。</p>\n<p>一个生成器函数看起来像一个普通的函数，不同的是普通函数返回一个值，而一个生成可以yield生成许多它所需要的值，并且每一次的生成返回值只是暂停当前的执行状态，当下次调用生成器函数时，PHP会从上次暂停的状态继续执行下去。</p>","more":"<p>我们在使用生成器的时候可以像关联数组那样指定一个键名对应生成的值。如下生成一个键值对与定义一个关联数组相似。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xrange</span><span class=\"params\">($start, $limit, $step = <span class=\"number\">1</span>)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">for</span> ($i = $start, $j = <span class=\"number\">0</span>; $i &lt;= $limit; $i += $step, $j++) &#123;</div><div class=\"line\">        <span class=\"comment\">// 给予键值</span></div><div class=\"line\">        <span class=\"keyword\">yield</span> $j =&gt; $i;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$xrange = xrange(<span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">2</span>);</div><div class=\"line\"><span class=\"keyword\">foreach</span> ($xrange <span class=\"keyword\">as</span> $key =&gt; $value) &#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> $key . <span class=\"string\">' =&gt; '</span> . $value . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>实际上生成器函数返回的是一个Generator对象，这个对象不能通过new实例化，并且实现了Iterator接口。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">Generator implements Iterator &#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> mixed current(void)</div><div class=\"line\">    <span class=\"keyword\">public</span> mixed key(void)</div><div class=\"line\">    <span class=\"keyword\">public</span> void next(void)</div><div class=\"line\">    <span class=\"keyword\">public</span> void rewind(void)</div><div class=\"line\">    <span class=\"comment\">// 向生成器传入一个值</span></div><div class=\"line\">    <span class=\"keyword\">public</span> mixed send(mixed $value)</div><div class=\"line\">    <span class=\"keyword\">public</span> void <span class=\"keyword\">throw</span>(<span class=\"keyword\">Exception</span> $exception)</div><div class=\"line\">    <span class=\"keyword\">public</span> bool valid(void)</div><div class=\"line\">    <span class=\"comment\">// 序列化回调</span></div><div class=\"line\">    <span class=\"keyword\">public</span> void __wakeup(void)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以看到出了实现Iterator的接口之外Generator还添加了send方法，用来向生成器传入一个值，并且当做yield表达式的结果，然后继续执行生成器，直到遇到下一个yield后会再次停住。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'receive: '</span> . <span class=\"keyword\">yield</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'Hello'</span>);</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'world'</span>);</div></pre></td></tr></table></figure>\n<p>以上的例子会输出：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">receive: Hello</div><div class=\"line\">receive: world</div></pre></td></tr></table></figure></p>\n<p>在上面的例子中，经过第一个send()方法，yield表达式的值变为Hello，之后执行echo语句，输出第一条结果receive: Hello，输出完毕后继续执行到第二个yield处，只不过当前的语句没有执行到底，不会执行输出。如果将例子改改就能够看出来yield的继续执行到哪里。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $i = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'this is the yield '</span> . $i . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'receive: '</span> . <span class=\"keyword\">yield</span> . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        $i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'Hello'</span>);</div><div class=\"line\">$printer-&gt;send(<span class=\"string\">'world'</span>);</div></pre></td></tr></table></figure>\n<p>这次的输出便会变为:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">this is the yield 1</div><div class=\"line\">receive: hello</div><div class=\"line\">this is the yield 2</div><div class=\"line\">receive: world</div><div class=\"line\">this is the yield 3</div></pre></td></tr></table></figure>\n<p>这边可以清楚的看出send之后的继续执行到第二个yield处，之前的代码照常执行。</p>\n<p>我们再对例子进行适当的修改：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $i = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'this is the yield '</span> . (<span class=\"keyword\">yield</span> $i) . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        $i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'first'</span>));</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'second'</span>));</div></pre></td></tr></table></figure>\n<p>执行一下会发现结果为:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">this is the yield first</div><div class=\"line\">int(2)</div><div class=\"line\">this is the yield second</div><div class=\"line\">int(3)</div></pre></td></tr></table></figure>\n<p>让我们来看一下，是不是发现了问题，跑出来的结果不是从1开始的而是从2开始，这是为啥嘞，我们来分析一下：<br>在此之前我们先来跑另外一段代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">printer</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    $i = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'this is the yield '</span> . (<span class=\"keyword\">yield</span> $i) . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">        $i++;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$printer = printer();</div><div class=\"line\">var_dump($printer-&gt;current());</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'first'</span>));</div><div class=\"line\">var_dump($printer-&gt;send(<span class=\"string\">'second'</span>));</div></pre></td></tr></table></figure>\n<p>这个时候我们会发现执行的结果变成了:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">int(1)</div><div class=\"line\">this is the yield first</div><div class=\"line\">int(2)</div><div class=\"line\">this is the yield second</div><div class=\"line\">int(3)</div></pre></td></tr></table></figure>\n<p>可以看到在第一次调用生成器函数的时候，生成器已经执行到了第一个yield表达式处，所以在$printer-&gt;send(‘first’)之前，生成器便已经yield 1出来了，只是没有对这个生成的值进行接收处理，在send()了之后，echo语句便会紧接着完整的执行，执行完毕继续执行$i++，下次循环便是var_dump(2)。</p>\n<p>至此，我们看到了yield不仅能够返回数据而且还可以接收数据，而且两者可以同时进行，此时yield便成了数据双向传输的工具，这就为了实现协程提供了可能性。</p>\n<p>参考<a href=\"http://www.laruence.com/2015/05/28/3038.html\" target=\"_blank\" rel=\"external\">在PHP中使用协程实现多任务调度</a><br>加深理解</p>"},{"uuid":"074389f0-d749-11e6-b682-1dff7bae05e3","title":"note","date":"2017-01-10T15:25:33.000Z","_content":"\n- MVC是观察者模式(Observer), 策略模式(Strategy)和组合模式(Composite)三个设计模式的演变，MVC是模式的组合\n- 高性能离不开异步，异步离不开队列，而其内部都是Producer-Comsumer模式的原理\n\n<!--more-->\n","source":"_posts/note.md","raw":"---\nuuid: 074389f0-d749-11e6-b682-1dff7bae05e3\ntitle: note\ndate: 2017-01-10 23:25:33\ntags: note\n---\n\n- MVC是观察者模式(Observer), 策略模式(Strategy)和组合模式(Composite)三个设计模式的演变，MVC是模式的组合\n- 高性能离不开异步，异步离不开队列，而其内部都是Producer-Comsumer模式的原理\n\n<!--more-->\n","slug":"note","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rq000mw8wqzieflrvn","content":"<ul>\n<li>MVC是观察者模式(Observer), 策略模式(Strategy)和组合模式(Composite)三个设计模式的演变，MVC是模式的组合</li>\n<li>高性能离不开异步，异步离不开队列，而其内部都是Producer-Comsumer模式的原理</li>\n</ul>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<ul>\n<li>MVC是观察者模式(Observer), 策略模式(Strategy)和组合模式(Composite)三个设计模式的演变，MVC是模式的组合</li>\n<li>高性能离不开异步，异步离不开队列，而其内部都是Producer-Comsumer模式的原理</li>\n</ul>","more":""},{"uuid":"f192d6e0-3a4b-11e7-b593-1fcd04ea44f8","title":"php迭代器和yield","date":"2017-05-16T15:25:50.000Z","_content":"\n\nPHP提供了统一的迭代器接口：\n```php\nIterator extends Traversable\n{\n\t//返回当前元素\n\tabstract public mixed current(void)\n\t//返回当前元素的键\n\tabstract public scalar key(void)\n\t//向下移动到下一个元素\n\tabstract public void next(void)\n\t//返回到迭代器的第一个元素\n\tabstract public void remind(void)\n\t//检查当前位置是否有效\n\tabstract public boolean valid(void)\n}\n```\n\n<!-- more -->\n\n通过**Iterator接口**, 我们可以自行实现,来观察迭代器的调用顺序.\n```php\nclass MyIterator implements Iterator\n{\n\tprivate $position = 0;\n\tprivate $arr = array(\n\t\t'first', 'second', 'third',\n\t);\n\n\tpublic function __construct()\n\t{\n\t\t$this->_position = 0;\n\t}\n\n\tpublic function rewind()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\t$this->_position = 0;\n\t}\n\n\tpublic function current()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\treturn $this->arr[ $this->_position ];\n\t}\n\n\tpublic function key()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\treturn $this->position;\n\t}\n\n\tpublic function next()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\t++$this->_position;\n\t}\n\n\tpublic function valid()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\treturn isset( $this->arr[ $this->_position ] );\n\t}\n\n\t$it = new MyIterator();\n\tforeach( $it as $key => $value )\n\t{\n\t\tvar_dump( $key , $value );\n\t\techo PHP_EOL;\n\t}\n}\n```\n\nphp运行结果\n```shell\nstring(18) \"MyIterator::rewind\"\nstring(17) \"MyIterator::valid\"\nstring(19) \"MyIterator::current\"\nstring(15) \"MyIterator::key\"\nint(0)\nstring(5) \"first\"\n\nstring(16) \"MyIterator::next\"\nstring(17) \"MyIterator::valid\"\nstring(19) \"MyIterator::current\"\nstring(15) \"MyIterator::key\"\nint(1)\nstring(6) \"second\"\n\nstring(16) \"MyIterator::next\"\nstring(17) \"MyIterator::valid\"\nstring(19) \"MyIterator::current\"\nstring(15) \"MyIterator::key\"\nint(2)\nstring(5) \"third\"\n\nstring(16) \"MyIterator::next\"\nstring(17) \"MyIterator::valid\"\n```\n\n通过这个例子能够清楚的看到了foreach循环中调用的顺序。从例子也能看出通过迭代器能够将一个普通的对象转化为一个可被遍历的对象。这在有些时候，能够将一个普通的UsersInfo对象转化为一个可以遍历的对象，那么就不需要通过UsersInfo::getAllUser()获取一个数组然后遍历数组，而且还可以在对象中对数据进行预处理。\n","source":"_posts/php迭代器.md","raw":"---\nuuid: f192d6e0-3a4b-11e7-b593-1fcd04ea44f8\ntitle: php迭代器和yield\ndate: 2017-05-16 23:25:50\ntags: php\n---\n\n\nPHP提供了统一的迭代器接口：\n```php\nIterator extends Traversable\n{\n\t//返回当前元素\n\tabstract public mixed current(void)\n\t//返回当前元素的键\n\tabstract public scalar key(void)\n\t//向下移动到下一个元素\n\tabstract public void next(void)\n\t//返回到迭代器的第一个元素\n\tabstract public void remind(void)\n\t//检查当前位置是否有效\n\tabstract public boolean valid(void)\n}\n```\n\n<!-- more -->\n\n通过**Iterator接口**, 我们可以自行实现,来观察迭代器的调用顺序.\n```php\nclass MyIterator implements Iterator\n{\n\tprivate $position = 0;\n\tprivate $arr = array(\n\t\t'first', 'second', 'third',\n\t);\n\n\tpublic function __construct()\n\t{\n\t\t$this->_position = 0;\n\t}\n\n\tpublic function rewind()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\t$this->_position = 0;\n\t}\n\n\tpublic function current()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\treturn $this->arr[ $this->_position ];\n\t}\n\n\tpublic function key()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\treturn $this->position;\n\t}\n\n\tpublic function next()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\t++$this->_position;\n\t}\n\n\tpublic function valid()\n\t{\n\t\tvar_dump(__METHOD__);\n\t\treturn isset( $this->arr[ $this->_position ] );\n\t}\n\n\t$it = new MyIterator();\n\tforeach( $it as $key => $value )\n\t{\n\t\tvar_dump( $key , $value );\n\t\techo PHP_EOL;\n\t}\n}\n```\n\nphp运行结果\n```shell\nstring(18) \"MyIterator::rewind\"\nstring(17) \"MyIterator::valid\"\nstring(19) \"MyIterator::current\"\nstring(15) \"MyIterator::key\"\nint(0)\nstring(5) \"first\"\n\nstring(16) \"MyIterator::next\"\nstring(17) \"MyIterator::valid\"\nstring(19) \"MyIterator::current\"\nstring(15) \"MyIterator::key\"\nint(1)\nstring(6) \"second\"\n\nstring(16) \"MyIterator::next\"\nstring(17) \"MyIterator::valid\"\nstring(19) \"MyIterator::current\"\nstring(15) \"MyIterator::key\"\nint(2)\nstring(5) \"third\"\n\nstring(16) \"MyIterator::next\"\nstring(17) \"MyIterator::valid\"\n```\n\n通过这个例子能够清楚的看到了foreach循环中调用的顺序。从例子也能看出通过迭代器能够将一个普通的对象转化为一个可被遍历的对象。这在有些时候，能够将一个普通的UsersInfo对象转化为一个可以遍历的对象，那么就不需要通过UsersInfo::getAllUser()获取一个数组然后遍历数组，而且还可以在对象中对数据进行预处理。\n","slug":"php迭代器","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rt000ow8wq8yc61jh6","content":"<p>PHP提供了统一的迭代器接口：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">Iterator extends Traversable</div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"comment\">//返回当前元素</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> mixed current(void)</div><div class=\"line\">\t<span class=\"comment\">//返回当前元素的键</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> scalar key(void)</div><div class=\"line\">\t<span class=\"comment\">//向下移动到下一个元素</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> void next(void)</div><div class=\"line\">\t<span class=\"comment\">//返回到迭代器的第一个元素</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> void remind(void)</div><div class=\"line\">\t<span class=\"comment\">//检查当前位置是否有效</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> boolean valid(void)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>通过<strong>Iterator接口</strong>, 我们可以自行实现,来观察迭代器的调用顺序.<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyIterator</span> <span class=\"keyword\">implements</span> <span class=\"title\">Iterator</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> $position = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">private</span> $arr = <span class=\"keyword\">array</span>(</div><div class=\"line\">\t\t<span class=\"string\">'first'</span>, <span class=\"string\">'second'</span>, <span class=\"string\">'third'</span>,</div><div class=\"line\">\t);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;_position = <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rewind</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;_position = <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">current</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;arr[ <span class=\"keyword\">$this</span>-&gt;_position ];</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">key</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;position;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">next</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t++<span class=\"keyword\">$this</span>-&gt;_position;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">valid</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">isset</span>( <span class=\"keyword\">$this</span>-&gt;arr[ <span class=\"keyword\">$this</span>-&gt;_position ] );</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t$it = <span class=\"keyword\">new</span> MyIterator();</div><div class=\"line\">\t<span class=\"keyword\">foreach</span>( $it <span class=\"keyword\">as</span> $key =&gt; $value )</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tvar_dump( $key , $value );</div><div class=\"line\">\t\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>php运行结果<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">string(18) \"MyIterator::rewind\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div><div class=\"line\">string(19) \"MyIterator::current\"</div><div class=\"line\">string(15) \"MyIterator::key\"</div><div class=\"line\">int(0)</div><div class=\"line\">string(5) \"first\"</div><div class=\"line\"></div><div class=\"line\">string(16) \"MyIterator::next\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div><div class=\"line\">string(19) \"MyIterator::current\"</div><div class=\"line\">string(15) \"MyIterator::key\"</div><div class=\"line\">int(1)</div><div class=\"line\">string(6) \"second\"</div><div class=\"line\"></div><div class=\"line\">string(16) \"MyIterator::next\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div><div class=\"line\">string(19) \"MyIterator::current\"</div><div class=\"line\">string(15) \"MyIterator::key\"</div><div class=\"line\">int(2)</div><div class=\"line\">string(5) \"third\"</div><div class=\"line\"></div><div class=\"line\">string(16) \"MyIterator::next\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div></pre></td></tr></table></figure></p>\n<p>通过这个例子能够清楚的看到了foreach循环中调用的顺序。从例子也能看出通过迭代器能够将一个普通的对象转化为一个可被遍历的对象。这在有些时候，能够将一个普通的UsersInfo对象转化为一个可以遍历的对象，那么就不需要通过UsersInfo::getAllUser()获取一个数组然后遍历数组，而且还可以在对象中对数据进行预处理。</p>\n","site":{"data":{}},"excerpt":"<p>PHP提供了统一的迭代器接口：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">Iterator extends Traversable</div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"comment\">//返回当前元素</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> mixed current(void)</div><div class=\"line\">\t<span class=\"comment\">//返回当前元素的键</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> scalar key(void)</div><div class=\"line\">\t<span class=\"comment\">//向下移动到下一个元素</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> void next(void)</div><div class=\"line\">\t<span class=\"comment\">//返回到迭代器的第一个元素</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> void remind(void)</div><div class=\"line\">\t<span class=\"comment\">//检查当前位置是否有效</span></div><div class=\"line\">\t<span class=\"keyword\">abstract</span> <span class=\"keyword\">public</span> boolean valid(void)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>","more":"<p>通过<strong>Iterator接口</strong>, 我们可以自行实现,来观察迭代器的调用顺序.<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyIterator</span> <span class=\"keyword\">implements</span> <span class=\"title\">Iterator</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> $position = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">private</span> $arr = <span class=\"keyword\">array</span>(</div><div class=\"line\">\t\t<span class=\"string\">'first'</span>, <span class=\"string\">'second'</span>, <span class=\"string\">'third'</span>,</div><div class=\"line\">\t);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;_position = <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rewind</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;_position = <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">current</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;arr[ <span class=\"keyword\">$this</span>-&gt;_position ];</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">key</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;position;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">next</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t++<span class=\"keyword\">$this</span>-&gt;_position;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">valid</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">\t</span>&#123;</div><div class=\"line\">\t\tvar_dump(<span class=\"keyword\">__METHOD__</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">isset</span>( <span class=\"keyword\">$this</span>-&gt;arr[ <span class=\"keyword\">$this</span>-&gt;_position ] );</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t$it = <span class=\"keyword\">new</span> MyIterator();</div><div class=\"line\">\t<span class=\"keyword\">foreach</span>( $it <span class=\"keyword\">as</span> $key =&gt; $value )</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\tvar_dump( $key , $value );</div><div class=\"line\">\t\t<span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>php运行结果<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">string(18) \"MyIterator::rewind\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div><div class=\"line\">string(19) \"MyIterator::current\"</div><div class=\"line\">string(15) \"MyIterator::key\"</div><div class=\"line\">int(0)</div><div class=\"line\">string(5) \"first\"</div><div class=\"line\"></div><div class=\"line\">string(16) \"MyIterator::next\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div><div class=\"line\">string(19) \"MyIterator::current\"</div><div class=\"line\">string(15) \"MyIterator::key\"</div><div class=\"line\">int(1)</div><div class=\"line\">string(6) \"second\"</div><div class=\"line\"></div><div class=\"line\">string(16) \"MyIterator::next\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div><div class=\"line\">string(19) \"MyIterator::current\"</div><div class=\"line\">string(15) \"MyIterator::key\"</div><div class=\"line\">int(2)</div><div class=\"line\">string(5) \"third\"</div><div class=\"line\"></div><div class=\"line\">string(16) \"MyIterator::next\"</div><div class=\"line\">string(17) \"MyIterator::valid\"</div></pre></td></tr></table></figure></p>\n<p>通过这个例子能够清楚的看到了foreach循环中调用的顺序。从例子也能看出通过迭代器能够将一个普通的对象转化为一个可被遍历的对象。这在有些时候，能够将一个普通的UsersInfo对象转化为一个可以遍历的对象，那么就不需要通过UsersInfo::getAllUser()获取一个数组然后遍历数组，而且还可以在对象中对数据进行预处理。</p>"},{"title":"su指定用户执行命令","date":"2017-08-31T03:09:42.000Z","_content":"\n## 命令行模式下\n```\n/etc/passwd中nologin改为bash\nsu user -s /bin/bash -c 'touch test.x'\n```\n\n## /etc/crontab下 \n```\n* * * * * user echo '12312' >> /tmp/test.x\n```\n","source":"_posts/su指定用户执行命令.md","raw":"---\ntitle: su指定用户执行命令\ndate: 2017-08-31 11:09:42\ntags:\n---\n\n## 命令行模式下\n```\n/etc/passwd中nologin改为bash\nsu user -s /bin/bash -c 'touch test.x'\n```\n\n## /etc/crontab下 \n```\n* * * * * user echo '12312' >> /tmp/test.x\n```\n","slug":"su指定用户执行命令","published":1,"updated":"2017-09-01T15:03:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rv000qw8wqz19w0c3j","content":"<h2 id=\"命令行模式下\"><a href=\"#命令行模式下\" class=\"headerlink\" title=\"命令行模式下\"></a>命令行模式下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/passwd中nologin改为bash</div><div class=\"line\">su user -s /bin/bash -c &apos;touch test.x&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"etc-crontab下\"><a href=\"#etc-crontab下\" class=\"headerlink\" title=\"/etc/crontab下\"></a>/etc/crontab下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * user echo &apos;12312&apos; &gt;&gt; /tmp/test.x</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"命令行模式下\"><a href=\"#命令行模式下\" class=\"headerlink\" title=\"命令行模式下\"></a>命令行模式下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/passwd中nologin改为bash</div><div class=\"line\">su user -s /bin/bash -c &apos;touch test.x&apos;</div></pre></td></tr></table></figure>\n<h2 id=\"etc-crontab下\"><a href=\"#etc-crontab下\" class=\"headerlink\" title=\"/etc/crontab下\"></a>/etc/crontab下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">* * * * * user echo &apos;12312&apos; &gt;&gt; /tmp/test.x</div></pre></td></tr></table></figure>\n"},{"uuid":"4eaa11c0-3bd9-11e7-b0d0-2307cdf5da87","title":"redis和memcached","date":"2017-05-18T14:50:17.000Z","_content":"\nmemcached是多线程，非阻塞IO复用的网络模型，分为监听主线程和worker子线程，监听线程监听网络连接，接受请求后，将连接描述字pipe传递给worker线程，进行读写IO，网络层使用libevent封装的事件库，多线程模型可以发挥多核作用，但是引入了cache coherency和锁的问题，比如：memcached最常用的stats命令，实际memcached所有操作都要对这个全局变量加锁，进行技术等工作，带来了性能损耗。\n\nredis使用单线程的IO复用模型，自己封装了一个简单的AeEvent事件处理框架，主要实现了epoll, kqueue和select，对于单存只有IO操作来说，单线程可以将速度优势发挥到最大，但是redis也提供了一些简单的计算功能，比如排序、聚合等，对于这些操作，单线程模型施加会严重影响整体吞吐量，CPU计算过程中，整个IO调度都是被阻塞的。\n\n*参考*[Redis 和 Memcached 的区别](http://blog.jobbole.com/101496/)\n","source":"_posts/redis和memcached.md","raw":"---\nuuid: 4eaa11c0-3bd9-11e7-b0d0-2307cdf5da87\ntitle: redis和memcached\ndate: 2017-05-18 22:50:17\ntags: nosql\n---\n\nmemcached是多线程，非阻塞IO复用的网络模型，分为监听主线程和worker子线程，监听线程监听网络连接，接受请求后，将连接描述字pipe传递给worker线程，进行读写IO，网络层使用libevent封装的事件库，多线程模型可以发挥多核作用，但是引入了cache coherency和锁的问题，比如：memcached最常用的stats命令，实际memcached所有操作都要对这个全局变量加锁，进行技术等工作，带来了性能损耗。\n\nredis使用单线程的IO复用模型，自己封装了一个简单的AeEvent事件处理框架，主要实现了epoll, kqueue和select，对于单存只有IO操作来说，单线程可以将速度优势发挥到最大，但是redis也提供了一些简单的计算功能，比如排序、聚合等，对于这些操作，单线程模型施加会严重影响整体吞吐量，CPU计算过程中，整个IO调度都是被阻塞的。\n\n*参考*[Redis 和 Memcached 的区别](http://blog.jobbole.com/101496/)\n","slug":"redis和memcached","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47rx000tw8wqy3cektgc","content":"<p>memcached是多线程，非阻塞IO复用的网络模型，分为监听主线程和worker子线程，监听线程监听网络连接，接受请求后，将连接描述字pipe传递给worker线程，进行读写IO，网络层使用libevent封装的事件库，多线程模型可以发挥多核作用，但是引入了cache coherency和锁的问题，比如：memcached最常用的stats命令，实际memcached所有操作都要对这个全局变量加锁，进行技术等工作，带来了性能损耗。</p>\n<p>redis使用单线程的IO复用模型，自己封装了一个简单的AeEvent事件处理框架，主要实现了epoll, kqueue和select，对于单存只有IO操作来说，单线程可以将速度优势发挥到最大，但是redis也提供了一些简单的计算功能，比如排序、聚合等，对于这些操作，单线程模型施加会严重影响整体吞吐量，CPU计算过程中，整个IO调度都是被阻塞的。</p>\n<p><em>参考</em><a href=\"http://blog.jobbole.com/101496/\" target=\"_blank\" rel=\"external\">Redis 和 Memcached 的区别</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>memcached是多线程，非阻塞IO复用的网络模型，分为监听主线程和worker子线程，监听线程监听网络连接，接受请求后，将连接描述字pipe传递给worker线程，进行读写IO，网络层使用libevent封装的事件库，多线程模型可以发挥多核作用，但是引入了cache coherency和锁的问题，比如：memcached最常用的stats命令，实际memcached所有操作都要对这个全局变量加锁，进行技术等工作，带来了性能损耗。</p>\n<p>redis使用单线程的IO复用模型，自己封装了一个简单的AeEvent事件处理框架，主要实现了epoll, kqueue和select，对于单存只有IO操作来说，单线程可以将速度优势发挥到最大，但是redis也提供了一些简单的计算功能，比如排序、聚合等，对于这些操作，单线程模型施加会严重影响整体吞吐量，CPU计算过程中，整个IO调度都是被阻塞的。</p>\n<p><em>参考</em><a href=\"http://blog.jobbole.com/101496/\" target=\"_blank\" rel=\"external\">Redis 和 Memcached 的区别</a></p>\n"},{"uuid":"8d19f870-30db-11e7-9203-0199550ca1d8","title":"一致性hash算法","date":"2017-05-04T15:08:38.000Z","_content":"\n参考 [Consistent hashing](https://www.codeproject.com/Articles/56138/Consistent-hashing)\n\n<!--more-->\n```php\n<?php\n/**\n * Flexihash - A simple consistent hashing implementation for PHP.\n * The MIT License\n */\nclass flexihash\n{\n\n    /**\n     * The number of positions to hash each target to.\n     *\n     * @var int\n     * @comment 虚拟节点数,解决节点分布不均的问题\n     */\n    private $_replicas = 64;\n\n    /**\n     * The hash algorithm, encapsulated in a Flexihash_Hasher implementation.\n     * @var object Flexihash_Hasher\n     * @comment 使用的hash方法 : md5,crc32\n     */\n    private $_hasher;\n\n    /**\n     * Internal counter for current number of targets.\n     * @var int\n     * @comment 节点记数器\n     */\n    private $_targetCount = 0;\n\n    /**\n     * Internal map of positions (hash outputs) to targets\n     * @var array { position => target, ... }\n     * @comment 位置对应节点,用于lookup中根据位置确定要访问的节点\n     */\n    private $_positionToTarget = array();\n\n    /**\n     * Internal map of targets to lists of positions that target is hashed to.\n     * @var array { target => [ position, position, ... ], ... }\n     * @comment 节点对应位置,用于删除节点\n     */\n    private $_targetToPositions = array();\n\n    /**\n     * Whether the internal map of positions to targets is already sorted.\n     * @var boolean\n     * @comment 是否已排序\n     */\n    private $_positionToTargetSorted = false;\n\n    /**\n     * Constructor\n     * @param object $hasher Flexihash_Hasher\n     * @param int $replicas Amount of positions to hash each target to.\n     * @comment 构造函数,确定要使用的hash方法和需拟节点数,虚拟节点数越多,分布越均匀,但程序的分布式运算越慢\n     */\n    public function __construct(Flexihash_Hasher $hasher = null, $replicas = null)\n    {\n        $this->_hasher = $hasher ? $hasher : new Flexihash_Crc32Hasher();\n        if (!empty($replicas)) $this->_replicas = $replicas;\n    }\n\n    /**\n     * Add a target.\n     * @param string $target\n     * @chainable\n     * @comment 添加节点,根据虚拟节点数,将节点分布到多个虚拟位置上\n     */\n    public function addTarget($target)\n    {\n        if (isset($this->_targetToPositions[$target]))\n        {\n            throw new Flexihash_Exception(\"Target '$target' already exists.\");\n        }\n\n        $this->_targetToPositions[$target] = array();\n\n        // hash the target into multiple positions\n        for ($i = 0; $i < $this->_replicas; $i++)\n        {\n            $position = $this->_hasher->hash($target . $i);\n            $this->_positionToTarget[$position] = $target; // lookup\n            $this->_targetToPositions[$target] []= $position; // target removal\n        }\n\n        $this->_positionToTargetSorted = false;\n        $this->_targetCount++;\n\n        return $this;\n    }\n\n    /**\n     * Add a list of targets.\n     * @param array $targets\n     * @chainable\n     */\n    public function addTargets($targets)\n    {\n        foreach ($targets as $target)\n        {\n            $this->addTarget($target);\n        }\n\n        return $this;\n    }\n\n    /**\n     * Remove a target.\n     * @param string $target\n     * @chainable\n     */\n    public function removeTarget($target)\n    {\n        if (!isset($this->_targetToPositions[$target]))\n        {\n            throw new Flexihash_Exception(\"Target '$target' does not exist.\");\n        }\n\n        foreach ($this->_targetToPositions[$target] as $position)\n        {\n            unset($this->_positionToTarget[$position]);\n        }\n\n        unset($this->_targetToPositions[$target]);\n\n        $this->_targetCount--;\n\n        return $this;\n    }\n\n    /**\n     * A list of all potential targets\n     * @return array\n     */\n    public function getAllTargets()\n    {\n        return array_keys($this->_targetToPositions);\n    }\n\n    /**\n     * Looks up the target for the given resource.\n     * @param string $resource\n     * @return string\n     */\n    public function lookup($resource)\n    {\n        $targets = $this->lookupList($resource, 1);\n        if (empty($targets)) throw new Flexihash_Exception('No targets exist');\n        return $targets[0];\n    }\n\n    /**\n     * Get a list of targets for the resource, in order of precedence.\n     * Up to $requestedCount targets are returned, less if there are fewer in total.\n     *\n     * @param string $resource\n     * @param int $requestedCount The length of the list to return\n     * @return array List of targets\n     * @comment 查找当前的资源对应的节点,\n     *          节点为空则返回空,节点只有一个则返回该节点,\n     *          对当前资源进行hash,对所有的位置进行排序,在有序的位置列上寻找当前资源的位置\n     *          当全部没有找到的时候,将资源的位置确定为有序位置的第一个(形成一个环)\n     *          返回所找到的节点\n     */\n    public function lookupList($resource, $requestedCount)\n    {\n        if (!$requestedCount)\n            throw new Flexihash_Exception('Invalid count requested');\n\n        // handle no targets\n        if (empty($this->_positionToTarget))\n            return array();\n\n        // optimize single target\n        if ($this->_targetCount == 1)\n            return array_unique(array_values($this->_positionToTarget));\n\n        // hash resource to a position\n        $resourcePosition = $this->_hasher->hash($resource);\n\n        $results = array();\n        $collect = false;\n\n        $this->_sortPositionTargets();\n\n        // search values above the resourcePosition\n        foreach ($this->_positionToTarget as $key => $value)\n        {\n            // start collecting targets after passing resource position\n            if (!$collect && $key > $resourcePosition)\n            {\n                $collect = true;\n            }\n\n            // only collect the first instance of any target\n            if ($collect && !in_array($value, $results))\n            {\n                $results []= $value;\n            }\n\n            // return when enough results, or list exhausted\n            if (count($results) == $requestedCount || count($results) == $this->_targetCount)\n            {\n                return $results;\n            }\n        }\n\n        // loop to start - search values below the resourcePosition\n        foreach ($this->_positionToTarget as $key => $value)\n        {\n            if (!in_array($value, $results))\n            {\n                $results []= $value;\n            }\n\n            // return when enough results, or list exhausted\n            if (count($results) == $requestedCount || count($results) == $this->_targetCount)\n            {\n                return $results;\n            }\n        }\n\n        // return results after iterating through both \"parts\"\n        return $results;\n    }\n\n    public function __toString()\n    {\n        return sprintf(\n            '%s{targets:[%s]}',\n            get_class($this),\n            implode(',', $this->getAllTargets())\n        );\n    }\n\n    // ----------------------------------------\n    // private methods\n\n    /**\n     * Sorts the internal mapping (positions to targets) by position\n     */\n    private function _sortPositionTargets()\n    {\n        // sort by key (position) if not already\n        if (!$this->_positionToTargetSorted)\n        {\n            ksort($this->_positionToTarget, SORT_REGULAR);\n            $this->_positionToTargetSorted = true;\n        }\n    }\n\n}\n\n\n/**\n * Hashes given values into a sortable fixed size address space.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\ninterface Flexihash_Hasher\n{\n\n    /**\n     * Hashes the given string into a 32bit address space.\n     *\n     * Note that the output may be more than 32bits of raw data, for example\n     * hexidecimal characters representing a 32bit value.\n     *\n     * The data must have 0xFFFFFFFF possible values, and be sortable by\n     * PHP sort functions using SORT_REGULAR.\n     *\n     * @param string\n     * @return mixed A sortable format with 0xFFFFFFFF possible values\n     */\n    public function hash($string);\n\n}\n\n\n/**\n * Uses CRC32 to hash a value into a signed 32bit int address space.\n * Under 32bit PHP this (safely) overflows into negatives ints.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\nclass Flexihash_Crc32Hasher\n    implements Flexihash_Hasher\n{\n\n    /* (non-phpdoc)\n     * @see Flexihash_Hasher::hash()\n     */\n    public function hash($string)\n    {\n        return crc32($string);\n    }\n\n}\n\n\n/**\n * Uses CRC32 to hash a value into a 32bit binary string data address space.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\nclass Flexihash_Md5Hasher\n    implements Flexihash_Hasher\n{\n\n    /* (non-phpdoc)\n     * @see Flexihash_Hasher::hash()\n     */\n    public function hash($string)\n    {\n        return substr(md5($string), 0, 8); // 8 hexits = 32bit\n\n        // 4 bytes of binary md5 data could also be used, but\n        // performance seems to be the same.\n    }\n\n}\n\n\n/**\n * An exception thrown by Flexihash.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\nclass Flexihash_Exception extends Exception\n{\n}\n```\n","source":"_posts/一致性hash算法.md","raw":"---\nuuid: 8d19f870-30db-11e7-9203-0199550ca1d8\ntitle: 一致性hash算法\ndate: 2017-05-04 23:08:38\ntags:\n---\n\n参考 [Consistent hashing](https://www.codeproject.com/Articles/56138/Consistent-hashing)\n\n<!--more-->\n```php\n<?php\n/**\n * Flexihash - A simple consistent hashing implementation for PHP.\n * The MIT License\n */\nclass flexihash\n{\n\n    /**\n     * The number of positions to hash each target to.\n     *\n     * @var int\n     * @comment 虚拟节点数,解决节点分布不均的问题\n     */\n    private $_replicas = 64;\n\n    /**\n     * The hash algorithm, encapsulated in a Flexihash_Hasher implementation.\n     * @var object Flexihash_Hasher\n     * @comment 使用的hash方法 : md5,crc32\n     */\n    private $_hasher;\n\n    /**\n     * Internal counter for current number of targets.\n     * @var int\n     * @comment 节点记数器\n     */\n    private $_targetCount = 0;\n\n    /**\n     * Internal map of positions (hash outputs) to targets\n     * @var array { position => target, ... }\n     * @comment 位置对应节点,用于lookup中根据位置确定要访问的节点\n     */\n    private $_positionToTarget = array();\n\n    /**\n     * Internal map of targets to lists of positions that target is hashed to.\n     * @var array { target => [ position, position, ... ], ... }\n     * @comment 节点对应位置,用于删除节点\n     */\n    private $_targetToPositions = array();\n\n    /**\n     * Whether the internal map of positions to targets is already sorted.\n     * @var boolean\n     * @comment 是否已排序\n     */\n    private $_positionToTargetSorted = false;\n\n    /**\n     * Constructor\n     * @param object $hasher Flexihash_Hasher\n     * @param int $replicas Amount of positions to hash each target to.\n     * @comment 构造函数,确定要使用的hash方法和需拟节点数,虚拟节点数越多,分布越均匀,但程序的分布式运算越慢\n     */\n    public function __construct(Flexihash_Hasher $hasher = null, $replicas = null)\n    {\n        $this->_hasher = $hasher ? $hasher : new Flexihash_Crc32Hasher();\n        if (!empty($replicas)) $this->_replicas = $replicas;\n    }\n\n    /**\n     * Add a target.\n     * @param string $target\n     * @chainable\n     * @comment 添加节点,根据虚拟节点数,将节点分布到多个虚拟位置上\n     */\n    public function addTarget($target)\n    {\n        if (isset($this->_targetToPositions[$target]))\n        {\n            throw new Flexihash_Exception(\"Target '$target' already exists.\");\n        }\n\n        $this->_targetToPositions[$target] = array();\n\n        // hash the target into multiple positions\n        for ($i = 0; $i < $this->_replicas; $i++)\n        {\n            $position = $this->_hasher->hash($target . $i);\n            $this->_positionToTarget[$position] = $target; // lookup\n            $this->_targetToPositions[$target] []= $position; // target removal\n        }\n\n        $this->_positionToTargetSorted = false;\n        $this->_targetCount++;\n\n        return $this;\n    }\n\n    /**\n     * Add a list of targets.\n     * @param array $targets\n     * @chainable\n     */\n    public function addTargets($targets)\n    {\n        foreach ($targets as $target)\n        {\n            $this->addTarget($target);\n        }\n\n        return $this;\n    }\n\n    /**\n     * Remove a target.\n     * @param string $target\n     * @chainable\n     */\n    public function removeTarget($target)\n    {\n        if (!isset($this->_targetToPositions[$target]))\n        {\n            throw new Flexihash_Exception(\"Target '$target' does not exist.\");\n        }\n\n        foreach ($this->_targetToPositions[$target] as $position)\n        {\n            unset($this->_positionToTarget[$position]);\n        }\n\n        unset($this->_targetToPositions[$target]);\n\n        $this->_targetCount--;\n\n        return $this;\n    }\n\n    /**\n     * A list of all potential targets\n     * @return array\n     */\n    public function getAllTargets()\n    {\n        return array_keys($this->_targetToPositions);\n    }\n\n    /**\n     * Looks up the target for the given resource.\n     * @param string $resource\n     * @return string\n     */\n    public function lookup($resource)\n    {\n        $targets = $this->lookupList($resource, 1);\n        if (empty($targets)) throw new Flexihash_Exception('No targets exist');\n        return $targets[0];\n    }\n\n    /**\n     * Get a list of targets for the resource, in order of precedence.\n     * Up to $requestedCount targets are returned, less if there are fewer in total.\n     *\n     * @param string $resource\n     * @param int $requestedCount The length of the list to return\n     * @return array List of targets\n     * @comment 查找当前的资源对应的节点,\n     *          节点为空则返回空,节点只有一个则返回该节点,\n     *          对当前资源进行hash,对所有的位置进行排序,在有序的位置列上寻找当前资源的位置\n     *          当全部没有找到的时候,将资源的位置确定为有序位置的第一个(形成一个环)\n     *          返回所找到的节点\n     */\n    public function lookupList($resource, $requestedCount)\n    {\n        if (!$requestedCount)\n            throw new Flexihash_Exception('Invalid count requested');\n\n        // handle no targets\n        if (empty($this->_positionToTarget))\n            return array();\n\n        // optimize single target\n        if ($this->_targetCount == 1)\n            return array_unique(array_values($this->_positionToTarget));\n\n        // hash resource to a position\n        $resourcePosition = $this->_hasher->hash($resource);\n\n        $results = array();\n        $collect = false;\n\n        $this->_sortPositionTargets();\n\n        // search values above the resourcePosition\n        foreach ($this->_positionToTarget as $key => $value)\n        {\n            // start collecting targets after passing resource position\n            if (!$collect && $key > $resourcePosition)\n            {\n                $collect = true;\n            }\n\n            // only collect the first instance of any target\n            if ($collect && !in_array($value, $results))\n            {\n                $results []= $value;\n            }\n\n            // return when enough results, or list exhausted\n            if (count($results) == $requestedCount || count($results) == $this->_targetCount)\n            {\n                return $results;\n            }\n        }\n\n        // loop to start - search values below the resourcePosition\n        foreach ($this->_positionToTarget as $key => $value)\n        {\n            if (!in_array($value, $results))\n            {\n                $results []= $value;\n            }\n\n            // return when enough results, or list exhausted\n            if (count($results) == $requestedCount || count($results) == $this->_targetCount)\n            {\n                return $results;\n            }\n        }\n\n        // return results after iterating through both \"parts\"\n        return $results;\n    }\n\n    public function __toString()\n    {\n        return sprintf(\n            '%s{targets:[%s]}',\n            get_class($this),\n            implode(',', $this->getAllTargets())\n        );\n    }\n\n    // ----------------------------------------\n    // private methods\n\n    /**\n     * Sorts the internal mapping (positions to targets) by position\n     */\n    private function _sortPositionTargets()\n    {\n        // sort by key (position) if not already\n        if (!$this->_positionToTargetSorted)\n        {\n            ksort($this->_positionToTarget, SORT_REGULAR);\n            $this->_positionToTargetSorted = true;\n        }\n    }\n\n}\n\n\n/**\n * Hashes given values into a sortable fixed size address space.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\ninterface Flexihash_Hasher\n{\n\n    /**\n     * Hashes the given string into a 32bit address space.\n     *\n     * Note that the output may be more than 32bits of raw data, for example\n     * hexidecimal characters representing a 32bit value.\n     *\n     * The data must have 0xFFFFFFFF possible values, and be sortable by\n     * PHP sort functions using SORT_REGULAR.\n     *\n     * @param string\n     * @return mixed A sortable format with 0xFFFFFFFF possible values\n     */\n    public function hash($string);\n\n}\n\n\n/**\n * Uses CRC32 to hash a value into a signed 32bit int address space.\n * Under 32bit PHP this (safely) overflows into negatives ints.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\nclass Flexihash_Crc32Hasher\n    implements Flexihash_Hasher\n{\n\n    /* (non-phpdoc)\n     * @see Flexihash_Hasher::hash()\n     */\n    public function hash($string)\n    {\n        return crc32($string);\n    }\n\n}\n\n\n/**\n * Uses CRC32 to hash a value into a 32bit binary string data address space.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\nclass Flexihash_Md5Hasher\n    implements Flexihash_Hasher\n{\n\n    /* (non-phpdoc)\n     * @see Flexihash_Hasher::hash()\n     */\n    public function hash($string)\n    {\n        return substr(md5($string), 0, 8); // 8 hexits = 32bit\n\n        // 4 bytes of binary md5 data could also be used, but\n        // performance seems to be the same.\n    }\n\n}\n\n\n/**\n * An exception thrown by Flexihash.\n *\n * @author Paul Annesley\n * @package Flexihash\n * @licence http://www.opensource.org/licenses/mit-license.php\n */\nclass Flexihash_Exception extends Exception\n{\n}\n```\n","slug":"一致性hash算法","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47ry000uw8wqlew05ycl","content":"<p>参考 <a href=\"https://www.codeproject.com/Articles/56138/Consistent-hashing\" target=\"_blank\" rel=\"external\">Consistent hashing</a></p>\n<a id=\"more\"></a>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Flexihash - A simple consistent hashing implementation for PHP.</span></div><div class=\"line\"><span class=\"comment\"> * The MIT License</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">flexihash</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * The number of positions to hash each target to.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> int</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 虚拟节点数,解决节点分布不均的问题</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_replicas = <span class=\"number\">64</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * The hash algorithm, encapsulated in a Flexihash_Hasher implementation.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> object Flexihash_Hasher</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 使用的hash方法 : md5,crc32</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_hasher;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Internal counter for current number of targets.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> int</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 节点记数器</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_targetCount = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Internal map of positions (hash outputs) to targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array &#123; position =&gt; target, ... &#125;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 位置对应节点,用于lookup中根据位置确定要访问的节点</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_positionToTarget = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Internal map of targets to lists of positions that target is hashed to.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array &#123; target =&gt; [ position, position, ... ], ... &#125;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 节点对应位置,用于删除节点</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_targetToPositions = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Whether the internal map of positions to targets is already sorted.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> boolean</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 是否已排序</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_positionToTargetSorted = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Constructor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> object $hasher Flexihash_Hasher</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> int $replicas Amount of positions to hash each target to.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 构造函数,确定要使用的hash方法和需拟节点数,虚拟节点数越多,分布越均匀,但程序的分布式运算越慢</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">(Flexihash_Hasher $hasher = null, $replicas = null)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_hasher = $hasher ? $hasher : <span class=\"keyword\">new</span> Flexihash_Crc32Hasher();</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($replicas)) <span class=\"keyword\">$this</span>-&gt;_replicas = $replicas;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Add a target.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $target</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@chainable</span></span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 添加节点,根据虚拟节点数,将节点分布到多个虚拟位置上</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTarget</span><span class=\"params\">($target)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target]))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">\"Target '$target' already exists.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target] = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// hash the target into multiple positions</span></div><div class=\"line\">        <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; <span class=\"keyword\">$this</span>-&gt;_replicas; $i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            $position = <span class=\"keyword\">$this</span>-&gt;_hasher-&gt;hash($target . $i);</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_positionToTarget[$position] = $target; <span class=\"comment\">// lookup</span></div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target] []= $position; <span class=\"comment\">// target removal</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_positionToTargetSorted = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_targetCount++;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Add a list of targets.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@chainable</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTargets</span><span class=\"params\">($targets)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> ($targets <span class=\"keyword\">as</span> $target)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;addTarget($target);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Remove a target.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $target</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@chainable</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeTarget</span><span class=\"params\">($target)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target]))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">\"Target '$target' does not exist.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target] <span class=\"keyword\">as</span> $position)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;_positionToTarget[$position]);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target]);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_targetCount--;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * A list of all potential targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> array</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAllTargets</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> array_keys(<span class=\"keyword\">$this</span>-&gt;_targetToPositions);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Looks up the target for the given resource.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $resource</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> string</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lookup</span><span class=\"params\">($resource)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        $targets = <span class=\"keyword\">$this</span>-&gt;lookupList($resource, <span class=\"number\">1</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>($targets)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">'No targets exist'</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> $targets[<span class=\"number\">0</span>];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Get a list of targets for the resource, in order of precedence.</span></div><div class=\"line\"><span class=\"comment\">     * Up to $requestedCount targets are returned, less if there are fewer in total.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $resource</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> int $requestedCount The length of the list to return</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> array List of targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 查找当前的资源对应的节点,</span></div><div class=\"line\"><span class=\"comment\">     *          节点为空则返回空,节点只有一个则返回该节点,</span></div><div class=\"line\"><span class=\"comment\">     *          对当前资源进行hash,对所有的位置进行排序,在有序的位置列上寻找当前资源的位置</span></div><div class=\"line\"><span class=\"comment\">     *          当全部没有找到的时候,将资源的位置确定为有序位置的第一个(形成一个环)</span></div><div class=\"line\"><span class=\"comment\">     *          返回所找到的节点</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lookupList</span><span class=\"params\">($resource, $requestedCount)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!$requestedCount)</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">'Invalid count requested'</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// handle no targets</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"keyword\">$this</span>-&gt;_positionToTarget))</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// optimize single target</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;_targetCount == <span class=\"number\">1</span>)</div><div class=\"line\">            <span class=\"keyword\">return</span> array_unique(array_values(<span class=\"keyword\">$this</span>-&gt;_positionToTarget));</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// hash resource to a position</span></div><div class=\"line\">        $resourcePosition = <span class=\"keyword\">$this</span>-&gt;_hasher-&gt;hash($resource);</div><div class=\"line\"></div><div class=\"line\">        $results = <span class=\"keyword\">array</span>();</div><div class=\"line\">        $collect = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_sortPositionTargets();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// search values above the resourcePosition</span></div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_positionToTarget <span class=\"keyword\">as</span> $key =&gt; $value)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">// start collecting targets after passing resource position</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!$collect &amp;&amp; $key &gt; $resourcePosition)</div><div class=\"line\">            &#123;</div><div class=\"line\">                $collect = <span class=\"keyword\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// only collect the first instance of any target</span></div><div class=\"line\">            <span class=\"keyword\">if</span> ($collect &amp;&amp; !in_array($value, $results))</div><div class=\"line\">            &#123;</div><div class=\"line\">                $results []= $value;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// return when enough results, or list exhausted</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (count($results) == $requestedCount || count($results) == <span class=\"keyword\">$this</span>-&gt;_targetCount)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> $results;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// loop to start - search values below the resourcePosition</span></div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_positionToTarget <span class=\"keyword\">as</span> $key =&gt; $value)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!in_array($value, $results))</div><div class=\"line\">            &#123;</div><div class=\"line\">                $results []= $value;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// return when enough results, or list exhausted</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (count($results) == $requestedCount || count($results) == <span class=\"keyword\">$this</span>-&gt;_targetCount)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> $results;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// return results after iterating through both \"parts\"</span></div><div class=\"line\">        <span class=\"keyword\">return</span> $results;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> sprintf(</div><div class=\"line\">            <span class=\"string\">'%s&#123;targets:[%s]&#125;'</span>,</div><div class=\"line\">            get_class(<span class=\"keyword\">$this</span>),</div><div class=\"line\">            implode(<span class=\"string\">','</span>, <span class=\"keyword\">$this</span>-&gt;getAllTargets())</div><div class=\"line\">        );</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// ----------------------------------------</span></div><div class=\"line\">    <span class=\"comment\">// private methods</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Sorts the internal mapping (positions to targets) by position</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_sortPositionTargets</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// sort by key (position) if not already</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">$this</span>-&gt;_positionToTargetSorted)</div><div class=\"line\">        &#123;</div><div class=\"line\">            ksort(<span class=\"keyword\">$this</span>-&gt;_positionToTarget, SORT_REGULAR);</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_positionToTargetSorted = <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Hashes given values into a sortable fixed size address space.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Flexihash_Hasher</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Hashes the given string into a 32bit address space.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * Note that the output may be more than 32bits of raw data, for example</span></div><div class=\"line\"><span class=\"comment\">     * hexidecimal characters representing a 32bit value.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * The data must have 0xFFFFFFFF possible values, and be sortable by</span></div><div class=\"line\"><span class=\"comment\">     * PHP sort functions using SORT_REGULAR.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> mixed A sortable format with 0xFFFFFFFF possible values</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hash</span><span class=\"params\">($string)</span></span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Uses CRC32 to hash a value into a signed 32bit int address space.</span></div><div class=\"line\"><span class=\"comment\"> * Under 32bit PHP this (safely) overflows into negatives ints.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flexihash_Crc32Hasher</span></span></div><div class=\"line\"><span class=\"class\">    <span class=\"keyword\">implements</span> <span class=\"title\">Flexihash_Hasher</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/* (non-phpdoc)</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> Flexihash_Hasher::hash()</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hash</span><span class=\"params\">($string)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> crc32($string);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Uses CRC32 to hash a value into a 32bit binary string data address space.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flexihash_Md5Hasher</span></span></div><div class=\"line\"><span class=\"class\">    <span class=\"keyword\">implements</span> <span class=\"title\">Flexihash_Hasher</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/* (non-phpdoc)</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> Flexihash_Hasher::hash()</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hash</span><span class=\"params\">($string)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> substr(md5($string), <span class=\"number\">0</span>, <span class=\"number\">8</span>); <span class=\"comment\">// 8 hexits = 32bit</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// 4 bytes of binary md5 data could also be used, but</span></div><div class=\"line\">        <span class=\"comment\">// performance seems to be the same.</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * An exception thrown by Flexihash.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flexihash_Exception</span> <span class=\"keyword\">extends</span> <span class=\"title\">Exception</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>参考 <a href=\"https://www.codeproject.com/Articles/56138/Consistent-hashing\" target=\"_blank\" rel=\"external\">Consistent hashing</a></p>","more":"<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Flexihash - A simple consistent hashing implementation for PHP.</span></div><div class=\"line\"><span class=\"comment\"> * The MIT License</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">flexihash</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * The number of positions to hash each target to.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> int</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 虚拟节点数,解决节点分布不均的问题</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_replicas = <span class=\"number\">64</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * The hash algorithm, encapsulated in a Flexihash_Hasher implementation.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> object Flexihash_Hasher</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 使用的hash方法 : md5,crc32</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_hasher;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Internal counter for current number of targets.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> int</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 节点记数器</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_targetCount = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Internal map of positions (hash outputs) to targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array &#123; position =&gt; target, ... &#125;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 位置对应节点,用于lookup中根据位置确定要访问的节点</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_positionToTarget = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Internal map of targets to lists of positions that target is hashed to.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> array &#123; target =&gt; [ position, position, ... ], ... &#125;</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 节点对应位置,用于删除节点</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_targetToPositions = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Whether the internal map of positions to targets is already sorted.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@var</span> boolean</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 是否已排序</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> $_positionToTargetSorted = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Constructor</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> object $hasher Flexihash_Hasher</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> int $replicas Amount of positions to hash each target to.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 构造函数,确定要使用的hash方法和需拟节点数,虚拟节点数越多,分布越均匀,但程序的分布式运算越慢</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">(Flexihash_Hasher $hasher = null, $replicas = null)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_hasher = $hasher ? $hasher : <span class=\"keyword\">new</span> Flexihash_Crc32Hasher();</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($replicas)) <span class=\"keyword\">$this</span>-&gt;_replicas = $replicas;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Add a target.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $target</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@chainable</span></span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 添加节点,根据虚拟节点数,将节点分布到多个虚拟位置上</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTarget</span><span class=\"params\">($target)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target]))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">\"Target '$target' already exists.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target] = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// hash the target into multiple positions</span></div><div class=\"line\">        <span class=\"keyword\">for</span> ($i = <span class=\"number\">0</span>; $i &lt; <span class=\"keyword\">$this</span>-&gt;_replicas; $i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            $position = <span class=\"keyword\">$this</span>-&gt;_hasher-&gt;hash($target . $i);</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_positionToTarget[$position] = $target; <span class=\"comment\">// lookup</span></div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target] []= $position; <span class=\"comment\">// target removal</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_positionToTargetSorted = <span class=\"keyword\">false</span>;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_targetCount++;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Add a list of targets.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> array $targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@chainable</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addTargets</span><span class=\"params\">($targets)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> ($targets <span class=\"keyword\">as</span> $target)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;addTarget($target);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Remove a target.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $target</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@chainable</span></span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeTarget</span><span class=\"params\">($target)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target]))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">\"Target '$target' does not exist.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target] <span class=\"keyword\">as</span> $position)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;_positionToTarget[$position]);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;_targetToPositions[$target]);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_targetCount--;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * A list of all potential targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> array</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getAllTargets</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> array_keys(<span class=\"keyword\">$this</span>-&gt;_targetToPositions);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Looks up the target for the given resource.</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $resource</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> string</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lookup</span><span class=\"params\">($resource)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        $targets = <span class=\"keyword\">$this</span>-&gt;lookupList($resource, <span class=\"number\">1</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>($targets)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">'No targets exist'</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> $targets[<span class=\"number\">0</span>];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Get a list of targets for the resource, in order of precedence.</span></div><div class=\"line\"><span class=\"comment\">     * Up to $requestedCount targets are returned, less if there are fewer in total.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string $resource</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> int $requestedCount The length of the list to return</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> array List of targets</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@comment</span> 查找当前的资源对应的节点,</span></div><div class=\"line\"><span class=\"comment\">     *          节点为空则返回空,节点只有一个则返回该节点,</span></div><div class=\"line\"><span class=\"comment\">     *          对当前资源进行hash,对所有的位置进行排序,在有序的位置列上寻找当前资源的位置</span></div><div class=\"line\"><span class=\"comment\">     *          当全部没有找到的时候,将资源的位置确定为有序位置的第一个(形成一个环)</span></div><div class=\"line\"><span class=\"comment\">     *          返回所找到的节点</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">lookupList</span><span class=\"params\">($resource, $requestedCount)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (!$requestedCount)</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Flexihash_Exception(<span class=\"string\">'Invalid count requested'</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// handle no targets</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"keyword\">$this</span>-&gt;_positionToTarget))</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// optimize single target</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;_targetCount == <span class=\"number\">1</span>)</div><div class=\"line\">            <span class=\"keyword\">return</span> array_unique(array_values(<span class=\"keyword\">$this</span>-&gt;_positionToTarget));</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// hash resource to a position</span></div><div class=\"line\">        $resourcePosition = <span class=\"keyword\">$this</span>-&gt;_hasher-&gt;hash($resource);</div><div class=\"line\"></div><div class=\"line\">        $results = <span class=\"keyword\">array</span>();</div><div class=\"line\">        $collect = <span class=\"keyword\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_sortPositionTargets();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// search values above the resourcePosition</span></div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_positionToTarget <span class=\"keyword\">as</span> $key =&gt; $value)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">// start collecting targets after passing resource position</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!$collect &amp;&amp; $key &gt; $resourcePosition)</div><div class=\"line\">            &#123;</div><div class=\"line\">                $collect = <span class=\"keyword\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// only collect the first instance of any target</span></div><div class=\"line\">            <span class=\"keyword\">if</span> ($collect &amp;&amp; !in_array($value, $results))</div><div class=\"line\">            &#123;</div><div class=\"line\">                $results []= $value;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// return when enough results, or list exhausted</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (count($results) == $requestedCount || count($results) == <span class=\"keyword\">$this</span>-&gt;_targetCount)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> $results;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// loop to start - search values below the resourcePosition</span></div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_positionToTarget <span class=\"keyword\">as</span> $key =&gt; $value)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!in_array($value, $results))</div><div class=\"line\">            &#123;</div><div class=\"line\">                $results []= $value;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">// return when enough results, or list exhausted</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (count($results) == $requestedCount || count($results) == <span class=\"keyword\">$this</span>-&gt;_targetCount)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> $results;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// return results after iterating through both \"parts\"</span></div><div class=\"line\">        <span class=\"keyword\">return</span> $results;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> sprintf(</div><div class=\"line\">            <span class=\"string\">'%s&#123;targets:[%s]&#125;'</span>,</div><div class=\"line\">            get_class(<span class=\"keyword\">$this</span>),</div><div class=\"line\">            implode(<span class=\"string\">','</span>, <span class=\"keyword\">$this</span>-&gt;getAllTargets())</div><div class=\"line\">        );</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// ----------------------------------------</span></div><div class=\"line\">    <span class=\"comment\">// private methods</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Sorts the internal mapping (positions to targets) by position</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_sortPositionTargets</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// sort by key (position) if not already</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">$this</span>-&gt;_positionToTargetSorted)</div><div class=\"line\">        &#123;</div><div class=\"line\">            ksort(<span class=\"keyword\">$this</span>-&gt;_positionToTarget, SORT_REGULAR);</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_positionToTargetSorted = <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Hashes given values into a sortable fixed size address space.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Flexihash_Hasher</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">     * Hashes the given string into a 32bit address space.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * Note that the output may be more than 32bits of raw data, for example</span></div><div class=\"line\"><span class=\"comment\">     * hexidecimal characters representing a 32bit value.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * The data must have 0xFFFFFFFF possible values, and be sortable by</span></div><div class=\"line\"><span class=\"comment\">     * PHP sort functions using SORT_REGULAR.</span></div><div class=\"line\"><span class=\"comment\">     *</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> string</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> mixed A sortable format with 0xFFFFFFFF possible values</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hash</span><span class=\"params\">($string)</span></span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Uses CRC32 to hash a value into a signed 32bit int address space.</span></div><div class=\"line\"><span class=\"comment\"> * Under 32bit PHP this (safely) overflows into negatives ints.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flexihash_Crc32Hasher</span></span></div><div class=\"line\"><span class=\"class\">    <span class=\"keyword\">implements</span> <span class=\"title\">Flexihash_Hasher</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/* (non-phpdoc)</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> Flexihash_Hasher::hash()</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hash</span><span class=\"params\">($string)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> crc32($string);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * Uses CRC32 to hash a value into a 32bit binary string data address space.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flexihash_Md5Hasher</span></span></div><div class=\"line\"><span class=\"class\">    <span class=\"keyword\">implements</span> <span class=\"title\">Flexihash_Hasher</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/* (non-phpdoc)</span></div><div class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@see</span> Flexihash_Hasher::hash()</span></div><div class=\"line\"><span class=\"comment\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hash</span><span class=\"params\">($string)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> substr(md5($string), <span class=\"number\">0</span>, <span class=\"number\">8</span>); <span class=\"comment\">// 8 hexits = 32bit</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// 4 bytes of binary md5 data could also be used, but</span></div><div class=\"line\">        <span class=\"comment\">// performance seems to be the same.</span></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\"> * An exception thrown by Flexihash.</span></div><div class=\"line\"><span class=\"comment\"> *</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Paul Annesley</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@package</span> Flexihash</span></div><div class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@licence</span> http://www.opensource.org/licenses/mit-license.php</span></div><div class=\"line\"><span class=\"comment\"> */</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flexihash_Exception</span> <span class=\"keyword\">extends</span> <span class=\"title\">Exception</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"uuid":"95cab3b0-30db-11e7-800e-19f3936562a1","title":"面向对象设计的SOLID原则","date":"2017-05-04T15:08:52.000Z","_content":"\n```\nS.O.L.I.D是面向对象设计和编程(OOD&OOP)中几个重要编码原则(Programming Priciple)的首字母缩写。\n```\n\n","source":"_posts/面向对象设计的SOLID原则.md","raw":"---\nuuid: 95cab3b0-30db-11e7-800e-19f3936562a1\ntitle: 面向对象设计的SOLID原则\ndate: 2017-05-04 23:08:52\ntags:\n---\n\n```\nS.O.L.I.D是面向对象设计和编程(OOD&OOP)中几个重要编码原则(Programming Priciple)的首字母缩写。\n```\n\n","slug":"面向对象设计的SOLID原则","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47s1000ww8wq0dlxb8lo","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">S.O.L.I.D是面向对象设计和编程(OOD&amp;OOP)中几个重要编码原则(Programming Priciple)的首字母缩写。</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">S.O.L.I.D是面向对象设计和编程(OOD&amp;OOP)中几个重要编码原则(Programming Priciple)的首字母缩写。</div></pre></td></tr></table></figure>\n"},{"uuid":"c92488f0-3a57-11e7-992d-39f574d553c7","title":"策略模式","date":"2017-05-16T16:50:36.000Z","_content":"\n简单实现\n\n```php\n\ninterface Strategy\n{\n    public function doOperation($num1, $num2 );\n}\n\nclass OperationAdd implements Strategy\n{\n    public function doOperation($num1, $num2)\n    {\n        return $num1 + $num2;\n    }\n}\n\nclass OperationSubstract implements Strategy\n{\n    function doOperation( $num1 , $num2 )\n    {\n        return $num1 - $num2;\n    }\n}\n\nclass OperationMultiply implements Strategy\n{\n        public function doOperation( $num1 , $num2 )\n        {\n                return $num1 * $num2;\n        }\n}\n\nclass Context\n{\n   private $strategy;\n\n   public function __construct($strategy){\n       $this->strategy = $strategy;\n   }\n\n   public function executeStrategy($num1, $num2){\n      return $this->strategy->doOperation($num1, $num2);\n   }\n}\n\n$context = new Context(new OperationAdd());\necho (\"10 + 5 = \" . $context->executeStrategy(10, 5));\necho PHP_EOL;\n\n$context = new Context(new OperationSubstract());\necho (\"10 - 5 = \" . $context->executeStrategy(10, 5));\necho PHP_EOL;\n\n$context = new Context(new OperationMultiply());\necho (\"10 * 5 = \" . $context->executeStrategy(10, 5));\necho PHP_EOL;\n\n```\n","source":"_posts/策略模式.md","raw":"---\nuuid: c92488f0-3a57-11e7-992d-39f574d553c7\ntitle: 策略模式\ndate: 2017-05-17 00:50:36\ntags: Design pattern\n---\n\n简单实现\n\n```php\n\ninterface Strategy\n{\n    public function doOperation($num1, $num2 );\n}\n\nclass OperationAdd implements Strategy\n{\n    public function doOperation($num1, $num2)\n    {\n        return $num1 + $num2;\n    }\n}\n\nclass OperationSubstract implements Strategy\n{\n    function doOperation( $num1 , $num2 )\n    {\n        return $num1 - $num2;\n    }\n}\n\nclass OperationMultiply implements Strategy\n{\n        public function doOperation( $num1 , $num2 )\n        {\n                return $num1 * $num2;\n        }\n}\n\nclass Context\n{\n   private $strategy;\n\n   public function __construct($strategy){\n       $this->strategy = $strategy;\n   }\n\n   public function executeStrategy($num1, $num2){\n      return $this->strategy->doOperation($num1, $num2);\n   }\n}\n\n$context = new Context(new OperationAdd());\necho (\"10 + 5 = \" . $context->executeStrategy(10, 5));\necho PHP_EOL;\n\n$context = new Context(new OperationSubstract());\necho (\"10 - 5 = \" . $context->executeStrategy(10, 5));\necho PHP_EOL;\n\n$context = new Context(new OperationMultiply());\necho (\"10 * 5 = \" . $context->executeStrategy(10, 5));\necho PHP_EOL;\n\n```\n","slug":"策略模式","published":1,"updated":"2017-08-15T02:57:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjaxk47s3000yw8wqn4taohub","content":"<p>简单实现</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">($num1, $num2 )</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OperationAdd</span> <span class=\"keyword\">implements</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">($num1, $num2)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> $num1 + $num2;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OperationSubstract</span> <span class=\"keyword\">implements</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">( $num1 , $num2 )</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> $num1 - $num2;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OperationMultiply</span> <span class=\"keyword\">implements</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">( $num1 , $num2 )</span></span></div><div class=\"line\"><span class=\"function\">        </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> $num1 * $num2;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Context</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">   <span class=\"keyword\">private</span> $strategy;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($strategy)</span></span>&#123;</div><div class=\"line\">       <span class=\"keyword\">$this</span>-&gt;strategy = $strategy;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">executeStrategy</span><span class=\"params\">($num1, $num2)</span></span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;strategy-&gt;doOperation($num1, $num2);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$context = <span class=\"keyword\">new</span> Context(<span class=\"keyword\">new</span> OperationAdd());</div><div class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"string\">\"10 + 5 = \"</span> . $context-&gt;executeStrategy(<span class=\"number\">10</span>, <span class=\"number\">5</span>));</div><div class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\"></div><div class=\"line\">$context = <span class=\"keyword\">new</span> Context(<span class=\"keyword\">new</span> OperationSubstract());</div><div class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"string\">\"10 - 5 = \"</span> . $context-&gt;executeStrategy(<span class=\"number\">10</span>, <span class=\"number\">5</span>));</div><div class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\"></div><div class=\"line\">$context = <span class=\"keyword\">new</span> Context(<span class=\"keyword\">new</span> OperationMultiply());</div><div class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"string\">\"10 * 5 = \"</span> . $context-&gt;executeStrategy(<span class=\"number\">10</span>, <span class=\"number\">5</span>));</div><div class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>简单实现</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">($num1, $num2 )</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OperationAdd</span> <span class=\"keyword\">implements</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">($num1, $num2)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> $num1 + $num2;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OperationSubstract</span> <span class=\"keyword\">implements</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">( $num1 , $num2 )</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> $num1 - $num2;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OperationMultiply</span> <span class=\"keyword\">implements</span> <span class=\"title\">Strategy</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doOperation</span><span class=\"params\">( $num1 , $num2 )</span></span></div><div class=\"line\"><span class=\"function\">        </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> $num1 * $num2;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Context</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">   <span class=\"keyword\">private</span> $strategy;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($strategy)</span></span>&#123;</div><div class=\"line\">       <span class=\"keyword\">$this</span>-&gt;strategy = $strategy;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">executeStrategy</span><span class=\"params\">($num1, $num2)</span></span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;strategy-&gt;doOperation($num1, $num2);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$context = <span class=\"keyword\">new</span> Context(<span class=\"keyword\">new</span> OperationAdd());</div><div class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"string\">\"10 + 5 = \"</span> . $context-&gt;executeStrategy(<span class=\"number\">10</span>, <span class=\"number\">5</span>));</div><div class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\"></div><div class=\"line\">$context = <span class=\"keyword\">new</span> Context(<span class=\"keyword\">new</span> OperationSubstract());</div><div class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"string\">\"10 - 5 = \"</span> . $context-&gt;executeStrategy(<span class=\"number\">10</span>, <span class=\"number\">5</span>));</div><div class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL;</div><div class=\"line\"></div><div class=\"line\">$context = <span class=\"keyword\">new</span> Context(<span class=\"keyword\">new</span> OperationMultiply());</div><div class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"string\">\"10 * 5 = \"</span> . $context-&gt;executeStrategy(<span class=\"number\">10</span>, <span class=\"number\">5</span>));</div><div class=\"line\"><span class=\"keyword\">echo</span> PHP_EOL;</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjaxk47qo0001w8wql7n9jmuj","tag_id":"cjaxk47qz0004w8wqtpqfzrfd","_id":"cjaxk47ra0009w8wqf439n7it"},{"post_id":"cjaxk47qw0003w8wq1ny8fix8","tag_id":"cjaxk47r90008w8wqaf58f7bv","_id":"cjaxk47rg000ew8wqq3aqiab9"},{"post_id":"cjaxk47rc000bw8wqn1kv38ph","tag_id":"cjaxk47qz0004w8wqtpqfzrfd","_id":"cjaxk47ri000gw8wq3bacdqde"},{"post_id":"cjaxk47r30006w8wq9pfo0bwk","tag_id":"cjaxk47rd000cw8wqvhyk1uw5","_id":"cjaxk47rk000jw8wqg1cdmsbf"},{"post_id":"cjaxk47r60007w8wqrvwvf4na","tag_id":"cjaxk47ri000hw8wqwwl71v6v","_id":"cjaxk47rs000nw8wquz9iwwbw"},{"post_id":"cjaxk47rq000mw8wqzieflrvn","tag_id":"cjaxk47qz0004w8wqtpqfzrfd","_id":"cjaxk47rv000pw8wq8e7snh9k"},{"post_id":"cjaxk47re000dw8wqlk7btgfx","tag_id":"cjaxk47ro000lw8wqnftn9xrq","_id":"cjaxk47rw000sw8wqzr2aga1w"},{"post_id":"cjaxk47rg000fw8wqrazhysve","tag_id":"cjaxk47rw000rw8wqq88bta30","_id":"cjaxk47s2000xw8wqtqznq4mh"},{"post_id":"cjaxk47rj000iw8wqblmsje8i","tag_id":"cjaxk47rw000rw8wqq88bta30","_id":"cjaxk47s50010w8wqkgdrc814"},{"post_id":"cjaxk47rl000kw8wqqsg4c4tl","tag_id":"cjaxk47rw000rw8wqq88bta30","_id":"cjaxk47s60012w8wqnyv1ct0a"},{"post_id":"cjaxk47rt000ow8wq8yc61jh6","tag_id":"cjaxk47rw000rw8wqq88bta30","_id":"cjaxk47s60014w8wqyfm21efv"},{"post_id":"cjaxk47rx000tw8wqy3cektgc","tag_id":"cjaxk47s60013w8wq3swi49hl","_id":"cjaxk47s70016w8wqym646c10"},{"post_id":"cjaxk47s3000yw8wqn4taohub","tag_id":"cjaxk47s60015w8wqusb0pswy","_id":"cjaxk47s70017w8wq4hevg1nw"}],"Tag":[{"name":"note","_id":"cjaxk47qz0004w8wqtpqfzrfd"},{"name":"content","_id":"cjaxk47r90008w8wqaf58f7bv"},{"name":"mysql","_id":"cjaxk47rd000cw8wqvhyk1uw5"},{"name":"blog","_id":"cjaxk47ri000hw8wqwwl71v6v"},{"name":"kubernetes","_id":"cjaxk47ro000lw8wqnftn9xrq"},{"name":"php","_id":"cjaxk47rw000rw8wqq88bta30"},{"name":"nosql","_id":"cjaxk47s60013w8wq3swi49hl"},{"name":"Design pattern","_id":"cjaxk47s60015w8wqusb0pswy"}]}}